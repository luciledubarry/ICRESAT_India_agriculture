---
title: "Contrôle pour la méchanisation : Analyse du travail féminin familial par caste"
format: html
editor: source
---

```{r, message=FALSE, warning=FALSE}
rm(list = ls())
graphics.off()
cat("\014")
```

```{r, message=FALSE, warning=FALSE}
here::i_am("ICRESAT_database_analysis/Analyse_caste.qmd")
library(dplyr)
library(tidyr)
library(readxl)
library(ggplot2)
library(scales)
library(knitr)
library(tibble)
library(tidyverse)
library(gt)
```

```{r}
Cultivation_expand <- readRDS(here::here("Base de données générées", "Cultivation_expand", "Cultivation_expand.rds"))
```

L'objectif est d'étudier le lien entre travail féminin employé et travail féminin familial selon la caste, en contrôlant pour la méchanisation. 

Les FC embauchent moins de travail féminin (notamment familial) mais ont également plus d'opérations méchanisées. Il faut contrôler pour la méchanisation par caste et par opération, car celle-ci est substituable avec entre autres le travail féminin familial. 

```{r}
Cultivation_expand |>
  filter(!is.na(CASTE_GROUP),
         CROP == "PADDY",
         SEASON == "KHARIF") |>
  group_by(CASTE_GROUP, MACHINERY) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(CASTE_GROUP, MACHINERY, proportion) |>
  pivot_wider(
    names_from = MACHINERY,
    values_from = proportion,
    values_fill = 0
  ) |>
  arrange(desc(Mécanisé))
```


********************************************************************************

## Travail par genre sans mécanisation

On veut étudier par caste et par opération, comment varie les heures de travail par acre (Hr/acre), en se concentrant sur les champs n'ayant pas du tout été méchanisé pour cette opération dans la saison. 

Je filtre pour la culture du riz en Kharif. 


### Calculer Hr/acre

Pour prendre en compte toutes les opérations par champ, dont celles qui ont un nombre d'heures travaillées nul sur toute la saison, j'inclue LAB_TYPE = NA dans les filtres.

Il est nécessaire de conserver les opérations avec aucune heure de travail pour le calcul de la moyenne de Hr/acre par opération. 

Je n'inclus pas le travail relatifs aux boeufs dans ces graphiques (LAB_TYPE = OB, HB, EB) ni les autres formes de travail (exchange, child). 

Remarque: Je n'ai pas eu besoin d'intégrer les opérations avec aucune heures de travail pour le calcul de Hr/acre moyen pour toutes opérations confondues, car un champ a nécessairement au moins une heure de travail. 

```{r}
# 1. Somme des heures de travail par champ, caste et lab_type
hacre_oper <- Cultivation_expand |>
  mutate(MACHINERY = replace_na(MACHINERY, "Non mécanisé")) |>
  filter(!is.na(CASTE_GROUP),
         CROP == "PADDY", 
         SEASON == "KHARIF",
         (LAB_TYPE %in% c("HF", "FF", "HM", "FM") | is.na(LAB_TYPE))
         ) |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, CASTE_GROUP, LAB_TYPE, OPERATION) |>
  summarise(TOTAL_HOURS = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>

# 2. Pivoter et créer les valeurs 0 quand le travail est nul
  pivot_wider(
    names_from = LAB_TYPE,
    values_from = TOTAL_HOURS,
    values_fill = 0
  ) |>

# 3. Calculer le travail total selon le genre
  mutate(
    WORK_F = HF + FF,
    WORK_M = HM + FM
  ) |>
  select(-'NA')
```

```{r}
# Calculer le ratio Hr/acre par opération selon le type de travail
hacre_oper <- hacre_oper |>
  filter(AREA_CROP != 0) |>
  mutate(
    HR_ACRE_HF = HF/AREA_CROP,
    HR_ACRE_FF = FF/AREA_CROP,
    HR_ACRE_F = WORK_F/AREA_CROP,
    HR_ACRE_FM = FM/AREA_CROP,
    HR_ACRE_HM = HM/AREA_CROP,
    HR_ACRE_M = WORK_M/AREA_CROP
  )
```


### Filtrer pour les champs sans méchanisation

```{r}
# Identifier les champs ayant utilisé des outils pendant la saison pour chaque opération
with_mecha <- Cultivation_expand |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, OPERATION) |>
  summarise(mech_used = any(MACHINERY == "Mécanisé"), .groups = "drop") |>
  mutate(mech_used = replace_na(mech_used, FALSE))

# Enlever les champs mécanisés, par opération
hacre_oper <- hacre_oper |>
  left_join(with_mecha, by = c("VDS_ID", "PLOT_CODE", "AREA_CROP", "OPERATION")) |>
  filter(mech_used == FALSE) |>

# Ajouter le nombre d'observations par opération et caste (LAB_TYPE identique pour tous)
  group_by(CASTE_GROUP, OPERATION) |>
  mutate(nb_obs = n()) |>
  ungroup()
```


```{r}
# Vérifier le nombre de champs avec zéro heures pour une opération, par caste
hacre_oper |>
  filter(WORK_F == 0, WORK_M == 0) |>
  count(CASTE_GROUP, name = "zero_hrs")
```


### Graphiques

#### Hr/acre et caste par opération 

Les graphiques suivants visent à représenter le travail moyen par acre (Hr/acre) pour tous les types de travail, par caste et par opération. 

Je choisis les opérations qui ont suffisamment d'observations et un taux de mécanisation relativement bas. 

```{r}
with_mecha |>
  group_by(mech_used, OPERATION) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(OPERATION) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(OPERATION, mech_used, proportion) |>
  pivot_wider(
    names_from = mech_used,
    values_from = proportion
  )
```


##### Harvesting & Threshing

Les graphiques suivants se basent exclusivement sur les champs n'ayant pas utilisé d'outils pour cultiver du riz sur toute la saison (Kharif). 

```{r}
# Calculer la moyenne de Hr/acre pour les femmes selon la caste
harvest_mean_F <- hacre_oper |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_HF = mean(HR_ACRE_HF, na.rm = TRUE),
    MEAN_HACRE_FF = mean(HR_ACRE_FF, na.rm = TRUE),
    MEAN_HACRE_WORK_F = mean(HR_ACRE_F, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_F, MEAN_HACRE_HF, MEAN_HACRE_FF),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
harvest_mean_F |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(harvest_mean_F, Lab_type == "MEAN_HACRE_WORK_F"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +

  coord_flip() +
  labs(
    title = "Non-mechanized harvesting: Female labor time per acre, by caste",
    x = "",
    y = "Average working hours for non-mechanized harvesting per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_F" = "lightblue4",
               "MEAN_HACRE_HF" = "lightblue2", 
               "MEAN_HACRE_FF" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_F" = "Total labor",
      "MEAN_HACRE_HF" = "Hired labor",
      "MEAN_HACRE_FF" = "Family labor"
    ),
    name = "Female labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```

Le nombre d'observations (n) représente le nombre d'opérations non mécanisées par caste. Il est identique pour tous les types de travail, puisqu'on a complété les LAB_TYPE manquants par zéro. 


```{r}
# Calculer la moyenne de Hr/acre pour les hommes selon la caste
harvest_mean_M <- hacre_oper |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_HM = mean(HR_ACRE_HM, na.rm = TRUE),
    MEAN_HACRE_FM = mean(HR_ACRE_FM, na.rm = TRUE),
    MEAN_HACRE_WORK_M = mean(HR_ACRE_M, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_M, MEAN_HACRE_HM, MEAN_HACRE_FM),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
harvest_mean_M |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +

  # Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(harvest_mean_M, Lab_type == "MEAN_HACRE_WORK_M"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +

  coord_flip() +
  labs(
    title = "Harvesting: Male labor time per acre, by caste",
    x = "",
    y = "Average working hours per acre for harvesting per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_M" = "lightblue4",
               "MEAN_HACRE_HM" = "lightblue2", 
               "MEAN_HACRE_FM" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_M" = "Total labor",
      "MEAN_HACRE_HM" = "Hired labor",
      "MEAN_HACRE_FM" = "Family labor"
    ),
    name = "Male labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```

##### Hand weeding

```{r}
# Calculer la moyenne de Hr/acre pour les femmes selon la caste
weeding_mean_F <- hacre_oper |>
  filter(OPERATION == "HAND WEEDING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_HF = mean(HR_ACRE_HF, na.rm = TRUE),
    MEAN_HACRE_FF = mean(HR_ACRE_FF, na.rm = TRUE),
    MEAN_HACRE_WORK_F = mean(HR_ACRE_F, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_F, MEAN_HACRE_HF, MEAN_HACRE_FF),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
weeding_mean_F |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +

  # Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(weeding_mean_F, Lab_type == "MEAN_HACRE_WORK_F"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +
  
  coord_flip() +
  labs(
    title = "Hand weeding: Female labor time per acre, by caste",
    x = "",
    y = "Average working hours per acre for weeding per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_F" = "lightblue4",
               "MEAN_HACRE_HF" = "lightblue2", 
               "MEAN_HACRE_FF" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_F" = "Total labor",
      "MEAN_HACRE_HF" = "Hired labor",
      "MEAN_HACRE_FF" = "Family labor"
    ),
    name = "Female labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```

##### Transplanting

```{r}
# Calculer la moyenne de Hr/acre pour les femmes selon la caste
transplanting_mean_F <- hacre_oper |>
  filter(OPERATION == "TRANSPLANTING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_HF = mean(HR_ACRE_HF, na.rm = TRUE),
    MEAN_HACRE_FF = mean(HR_ACRE_FF, na.rm = TRUE),
    MEAN_HACRE_WORK_F = mean(HR_ACRE_F, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_F, MEAN_HACRE_HF, MEAN_HACRE_FF),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
transplanting_mean_F |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +

  # Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(transplanting_mean_F, Lab_type == "MEAN_HACRE_WORK_F"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +
  
  coord_flip() +
  labs(
    title = "Non-mechanized transplanting: Female labor time per acre, by caste",
    x = "",
    y = "Average working hours per acre for non-mechanized transplanting per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_F" = "lightblue4",
               "MEAN_HACRE_HF" = "lightblue2", 
               "MEAN_HACRE_FF" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_F" = "Total labor",
      "MEAN_HACRE_HF" = "Hired labor",
      "MEAN_HACRE_FF" = "Family labor"
    ),
    name = "Female labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```

```{r}
# Calculer la moyenne de Hr/acre pour les hommes selon la caste
transplanting_mean_M <- hacre_oper |>
  filter(OPERATION == "TRANSPLANTING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_HM = mean(HR_ACRE_HM, na.rm = TRUE),
    MEAN_HACRE_FM = mean(HR_ACRE_FM, na.rm = TRUE),
    MEAN_HACRE_WORK_M = mean(HR_ACRE_M, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_M, MEAN_HACRE_HM, MEAN_HACRE_FM),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
transplanting_mean_M |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +

  # Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(transplanting_mean_M, Lab_type == "MEAN_HACRE_WORK_M"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +
  
  coord_flip() +
  labs(
    title = "Transplanting: Male labor time per acre, by caste",
    x = "",
    y = "Average working hours per acre for transplanting per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_M" = "lightblue4",
               "MEAN_HACRE_HM" = "lightblue2", 
               "MEAN_HACRE_FM" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_M" = "Total labor",
      "MEAN_HACRE_HM" = "Hired labor",
      "MEAN_HACRE_FM" = "Family labor"
    ),
    name = "Male labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```
Attention: L'échelle de Hr/acre n'est pas la même entre les graphiques sur les hommes et ceux sur les femmes. 


#### Superficie et travail familial féminin par opération, selon la caste

On regarde le travail familial féminin selon la superficie par opération, en filtrant pour les champs n'ayant pas mécanisé cette opération de toute la saison. 

```{r}
# Nombre de champs avec des heures de travail déclarées par opération
test_zero_hours <- hacre_oper |>
  mutate(total_hours = rowSums(across(c(FF, HF, FM, HM)))) |>
  group_by(OPERATION) |>
  count(zero_hours = total_hours == 0) |>
  filter(zero_hours == FALSE)
```


##### Harvesting & Threshing

```{r}
hacre_oper |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_FF, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 3), ylim = c(0, 150)) +
  labs(
    title = "Non-mechanized harvesting: Family female labor per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Family female labor hours per acre for non-mechanized harvesting in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```

##### Hand weeding

```{r}
hacre_oper |>
  filter(OPERATION == "HAND WEEDING") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_FF, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 3), ylim = c(0, 80)) +
  labs(
    title = "Hand weeding: Family female labor per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Family female labor hours oer acre for hand weeding in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```

##### Transplanting

```{r}
hacre_oper |>
  filter(OPERATION == "TRANSPLANTING") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_FF, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 3), ylim = c(0, 100)) +
  labs(
    title = "Non-mechanized transplanting: Family female labor time per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Family female labor hours per acre for non-mechanized transplanting in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```


********************************************************************************

## Travail total sans mécanisation

on observe que les hautes castes ont une demande de travail moindre (Hr/acre plus bas) pour les principales opérations que les autres castes, même en excluant les opérations mécanisées dans la saison. 

Pourquoi les FC ont besoin de moins de travail pour la culture du riz en Kharif ? 
- vérifier que le nombre d'opérations non mécanisées par acste soit suffisant ;
- refaire les résultats sans distinguer le genre et le type de travail (travail total) ;
- faire le lien avec la taille du champ. 


### Hr/acre et caste par opération

#### Recalculer Hr/acre en modifiant le type de travail

Tout d'abord, je refais les graphiques sur la relation entre Hr/acre apr opération et caste en considérant tous les types de travail (aucun filtre sur LAB_TYPE).

```{r}
# 1. Somme des heures de travail par champ, pour tout LAB_TYPE
hacre_all_labor <- Cultivation_expand |>
  mutate(MACHINERY = replace_na(MACHINERY, "Non mécanisé")) |>
  filter(!is.na(CASTE_GROUP),
         CROP == "PADDY", 
         SEASON == "KHARIF"
         ) |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, CASTE_GROUP, LAB_TYPE, OPERATION, MACHINERY) |>
  summarise(TOTAL_HOURS = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>

# 2. Pivoter et créer les valeurs 0 quand le travail est nul
  pivot_wider(
    names_from = LAB_TYPE,
    values_from = TOTAL_HOURS,
    values_fill = 0
  ) |>

# 3. Calculer le travail total selon le genre
  mutate(
    WORK_F = HF + FF,
    WORK_M = HM + FM,
    WORK_O = OB + FB + EB,
    WORK_E = EM + EF,
    WORK_C = HC + FC,
    ALL_WORK = HF + FF + HM + FM + OB + FB + EB + EM + EF + HC + FC
  ) |>
  select(-'NA')
```

```{r}
# Calculer le ratio Hr/acre par opération selon le type de travail
hacre_all_labor <- hacre_all_labor |>
  filter(AREA_CROP != 0) |>
  mutate(
    HR_ACRE_F = WORK_F/AREA_CROP,
    HR_ACRE_M = WORK_M/AREA_CROP,
    HR_ACRE_ALL = ALL_WORK/AREA_CROP, 
    HR_ACRE_O = WORK_O/AREA_CROP,
    HR_ACRE_E = WORK_E/AREA_CROP,
    HR_ACRE_C = WORK_C/AREA_CROP
  )
```

```{r}
# Enlever les champs mécanisés, par opération
hacre_no_meca <- hacre_all_labor |>
  left_join(with_mecha, by = c("VDS_ID", "PLOT_CODE", "AREA_CROP", "OPERATION")) |>
  filter(mech_used == FALSE) |>
  
# Ajouter le nombre d'observations par opération et caste (LAB_TYPE identique pour tous)
  group_by(CASTE_GROUP, OPERATION) |>
  mutate(nb_obs = n()) |>
  ungroup()
```


#### Harvesting & Threshing

Les graphiques suivants se basent exclusivement sur les champs n'ayant pas utilisé d'outils pour cultiver du riz sur toute la saison (Kharif). 

```{r}
# Calculer la moyenne de Hr/acre selon la caste
harvest_mean <- hacre_no_meca |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_M = mean(HR_ACRE_M, na.rm = TRUE),
    MEAN_HACRE_F = mean(HR_ACRE_F, na.rm = TRUE),
    MEAN_HACRE_ALL = mean(HR_ACRE_ALL, na.rm = TRUE),
    MEAN_HACRE_O = mean(HR_ACRE_E, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_M, MEAN_HACRE_F, MEAN_HACRE_ALL, MEAN_HACRE_O),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
harvest_mean |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(harvest_mean, Lab_type == "MEAN_HACRE_F"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +

  coord_flip() +
  labs(
    title = "Non-mechanized harvesting: Labor time per acre, by caste",
    x = "",
    y = "Average working hours for non-mechanized harvesting per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_M" = "lightblue2",
               "MEAN_HACRE_F" = "lightsteelblue3", 
               "MEAN_HACRE_ALL" = "violet",
               "MEAN_HACRE_O" = "lightblue4"),
        labels = c(
      "MEAN_HACRE_ALL" = "Total labor",
      "MEAN_HACRE_F" = "Female labor",
      "MEAN_HACRE_M" = "Male labor",
      "MEAN_HACRE_O" = "Bullock labor"
    ),
    name = "Labor type"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```

#### Land preparation

```{r}
# Calculer la moyenne de Hr/acre selon la caste
land_mean <- hacre_no_meca |>
  filter(OPERATION == "LAND PREPARATION") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_M = mean(HR_ACRE_M, na.rm = TRUE),
    MEAN_HACRE_F = mean(HR_ACRE_F, na.rm = TRUE),
    MEAN_HACRE_ALL = mean(HR_ACRE_ALL, na.rm = TRUE),
    MEAN_HACRE_O = mean(HR_ACRE_O, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_M, MEAN_HACRE_F, MEAN_HACRE_ALL, MEAN_HACRE_O),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
land_mean |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(land_mean, Lab_type == "MEAN_HACRE_F"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +

  coord_flip() +
  labs(
    title = "Non-mechanized land preparation: Labor time per acre, by caste",
    x = "",
    y = "Average working hours for non-mechanized land preparation per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_M" = "lightblue2",
               "MEAN_HACRE_F" = "lightsteelblue3", 
               "MEAN_HACRE_ALL" = "violet",
               "MEAN_HACRE_O" = "lightblue4"),
        labels = c(
      "MEAN_HACRE_ALL" = "Total labor",
      "MEAN_HACRE_F" = "Female labor",
      "MEAN_HACRE_M" = "Male labor",
      "MEAN_HACRE_O" = "Bullock labor"
    ),
    name = "Labor type"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```


#### Transplanting

```{r}
# Calculer la moyenne de Hr/acre selon la caste
transplanting_mean <- hacre_no_meca |>
  filter(OPERATION == "TRANSPLANTING") |>
  group_by(CASTE_GROUP, nb_obs) |>
  summarise(
    MEAN_HACRE_M = mean(HR_ACRE_M, na.rm = TRUE),
    MEAN_HACRE_F = mean(HR_ACRE_F, na.rm = TRUE),
    MEAN_HACRE_ALL = mean(HR_ACRE_ALL, na.rm = TRUE),
    MEAN_HACRE_E = mean(HR_ACRE_E, na.rm = TRUE),
    .groups = "drop"
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_M, MEAN_HACRE_F, MEAN_HACRE_ALL, MEAN_HACRE_E),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
transplanting_mean |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    data = subset(transplanting_mean, Lab_type == "MEAN_HACRE_F"),
    aes(x = CASTE_GROUP, y = 0, label = paste0("n = ", nb_obs)), 
    inherit.aes = FALSE,
    hjust = -0.2,
    size = 3.5
  ) +

  coord_flip() +
  labs(
    title = "Non-mechanized transplanting: Labor time per acre, by caste",
    x = "",
    y = "Average working hours for non-mechanized transplanting per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_M" = "lightblue4",
               "MEAN_HACRE_F" = "lightblue2", 
               "MEAN_HACRE_ALL" = "violet",
               "MEAN_HACRE_E" = "lightsteelblue3"),
        labels = c(
      "MEAN_HACRE_ALL" = "Total labor",
      "MEAN_HACRE_F" = "Female labor",
      "MEAN_HACRE_M" = "Male labor",
      "MEAN_HACRE_E" = "Exchange labor"
    ),
    name = "Labor type"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```


### Superficie et travail total 

Je refais les graphiques précédents sur travail et superficie par opération, en considérant le travail total (pour tout type de travail). Je filtre pour les champs n'ayant pas mécanisé cette opération de toute la saison.

#### Toutes castes et opérations non mécanisées

```{r}
hacre_no_meca |>
  distinct(VDS_ID, PLOT_CODE, AREA_CROP, HR_ACRE_ALL) |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_ALL)) +
  geom_point(alpha = 0.3, color = "hotpink2") +
  geom_smooth(method = "loess", se = TRUE, linewidth = 1.2, color = "hotpink4") +
  coord_cartesian(xlim = c(0, 5), ylim = c(0, 150)) +
  labs(
    title = "Non-mechanized operations: Total labor per acre and plot size",
    x = "Plot size (in acres)",
    y = "Labor hours per acre for non-mechanized operations"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20")
    )
```


#### Harvesting & Threshing

```{r}
hacre_no_meca |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_ALL, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
    coord_cartesian(xlim = c(0, 3), ylim = c(0, 400)) +
  labs(
    title = "Non-mechanized harvesting: Total labor per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Total labor hours per acre for non-mechanized harvesting in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```

#### Hand weeding

```{r}
hacre_no_meca |>
  filter(OPERATION == "HAND WEEDING") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_ALL, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
    coord_cartesian(xlim = c(0, 3), ylim = c(0, 150)) +
  labs(
    title = "Hand weeding: Total labor per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Total labor hours per acre for hand weeding in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```


#### Transplanting

```{r}
hacre_no_meca |>
  filter(OPERATION == "TRANSPLANTING") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_ALL, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
    coord_cartesian(xlim = c(0, 3), ylim = c(0, 200)) +
  labs(
    title = "Non-mechanized transplanting: Total labor per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Total labor hours per acre for non-mechanized transplanting in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```


#### Land preparation

```{r}
hacre_no_meca |>
  filter(OPERATION == "LAND PREPARATION") |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_ALL, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
    coord_cartesian(xlim = c(0, 3), ylim = c(0, 350)) +
  labs(
    title = "Non-mechanized tilling: Total labor per acre and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Total labor hours per acre for non-mechanized tilling in the season",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```


********************************************************************************

## Utilisation des boeufs par caste

Je regarde les heures de travail des boeufs selon la caste, pour toutes les opérations et pour land preparation spécifiquement, sans prendre en compte la mécanisation. 

```{r}
bullocks_hrs <- hacre_all_labor |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, CASTE_GROUP) |>
  mutate(HRS_ALL_O = sum(WORK_O, na.rm = TRUE),
         HACRE_ALL_O = HRS_ALL_O/AREA_CROP) |>
  ungroup() |>
  filter(OPERATION == "LAND PREPARATION") |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, CASTE_GROUP, HRS_ALL_O, HACRE_ALL_O) |>
  reframe(LAND_HRS_O = sum(WORK_O, na.rm = TRUE),
          LAND_HACRE_O = LAND_HRS_O/AREA_CROP,
          .groups = "drop") |>
  distinct()
```

```{r}
mean_bullocks_hrs <- bullocks_hrs |>
  group_by(CASTE_GROUP) |>
  summarise(
    ALL_OPER = mean(HRS_ALL_O, na.rm = TRUE),
    LAND_PREP = mean(LAND_HRS_O, na.rm = TRUE),
    .groups = "drop"
  ) |>
  pivot_longer(cols = c(ALL_OPER, LAND_PREP), names_to = "OPERATION", values_to = "HRS_PER_ACRE")
```

```{r}
mean_bullocks_hrs |>
  ggplot(aes(x = CASTE_GROUP, y = HRS_PER_ACRE, fill = OPERATION)) +
  geom_col(position = "dodge") +
  coord_flip() +

  labs(
    title = "Boeufs : Heures de travail selon la caste",
    x = "",
    y = "Heures de travail totales",
    fill = "Opération"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```


********************************************************************************

## Superficie minimale pour mécaniser

Foster (2022) fonde son modèle avec l'hypothèse d'une superficie minimale de la ferme en-dessous de laquelle il n'y a pas de mécanisation. 

On regarde la lien entre mécanisation et taille du champ et/ou de la ferme, pour estimer cette superficie minimale. 


### Toutes opérations confondues

#### Test 1

Pour chaque champ, une opération est considérée mécanisée si au moins un outil a été utilisé pour cette opération, à n'importe quel moment de la saison.

```{r}
mecha_by_area <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP),
         AREA_CROP != 0,
         CROP == "PADDY", 
         SEASON == "KHARIF",
         (LAB_TYPE %in% c("HF", "FF", "HM", "FM") | is.na(LAB_TYPE))
         ) |>
  left_join(with_mecha, by = c("VDS_ID", "PLOT_CODE", "AREA_CROP", "OPERATION")) |>
  mutate(bin_size = cut(
      AREA_CROP,
      breaks = c(seq(0, 5, by = 0.5), Inf),
      right = TRUE,
      include.lowest = TRUE)) |>
  filter(!is.na(bin_size))
  
mecha_all <- mecha_by_area |>
  group_by(bin_size) |>
  summarise(
    total = n(),
    mechanized = sum(mech_used == "TRUE"),
    share_mech = mechanized / total
  )
```

```{r}
mecha_all |>
  ggplot(aes(x = bin_size, y = share_mech)) +
  geom_col(fill = "plum3") +
  geom_text(aes(label = total), vjust = 1.5, size = 3.5, color = "white") +
  labs(
    title = "Share of mechanized operations by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of plots mechanized"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Le nombre d'observations indique la totalité des opérations (mécanisées ou non) pour chaque catégorie de plot size. 


#### Test 2

Chaque opération d'un même champ est considérée séparément comme mécanisée ou non, même si plusieurs opérations du même type ont eu lieu sur ce champ au cours de la saison.

```{r}
proportion_mecha <- Cultivation_expand |>
  filter(CROP == "PADDY", SEASON == "KHARIF") |>
  mutate(
    MACHINERY = replace_na(MACHINERY, "Non mécanisé"),
    is_mech = if_else(MACHINERY == "Mécanisé", 1, 0),  # numérique
    bin_size = cut(
      AREA_CROP,
      breaks = c(seq(0, 5, by = 0.5), Inf),
      right = TRUE,
      include.lowest = TRUE
    )
  ) |>
  group_by(bin_size) |>
  summarise(
    share_mecha = mean(is_mech, na.rm = TRUE),
    n = n(),
    .groups = "drop"
  )
```

```{r}
proportion_mecha |>
  filter(!is.na(bin_size)) |>
  ggplot(aes(x = bin_size, y = share_mecha)) +
  geom_text(aes(label = n), vjust = -0.3, size = 3.5, color = "gray30") +
  geom_col(fill = "slateblue2") +
  labs(
    title = "Share of mechanized operations by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of plots mechanized"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


### Par opération

#### Harvesting & Threshing

```{r}
mecha_harvest <- mecha_by_area |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  group_by(bin_size) |>
  summarise(
    total = n(),
    mechanized = sum(mech_used == "TRUE"),
    share_mech_harvest = mechanized / total
  )
```

```{r}
mecha_harvest |>
  ggplot(aes(x = bin_size, y = share_mech_harvest)) +
  geom_col(fill = "palegreen3") +
  geom_text(aes(label = total), vjust = 1.5, size = 3.5, color = "white") +
  labs(
    title = "Share of mechanized harvesting by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of mechanized harvesting"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


#### Land preparation

```{r}
mecha_land <- mecha_by_area |>
  filter(OPERATION == "LAND PREPARATION") |>
  group_by(bin_size) |>
  summarise(
    total = n(),
    mechanized = sum(mech_used == "TRUE"),
    share_mech_land = mechanized / total
  )
```

```{r}
mecha_land |>
  ggplot(aes(x = bin_size, y = share_mech_land)) +
  geom_col(fill = "hotpink2") +
  geom_text(aes(label = total), vjust = 1.5, size = 3.5, color = "white") +
  labs(
    title = "Share of mechanized land preparation by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of mechanized land preparation"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


#### Fertilizer application

```{r}
mecha_fertilizer <- mecha_by_area |>
  filter(OPERATION == "CHEMICAL FERTILIZER APPL.") |>
  group_by(bin_size) |>
  summarise(
    total = n(),
    mechanized = sum(mech_used == "TRUE"),
    share_mech_fertilizer = mechanized / total
  )
```

```{r}
mecha_fertilizer |>
  ggplot(aes(x = bin_size, y = share_mech_fertilizer)) +
  geom_col(fill = "yellowgreen") +
  geom_text(aes(label = total), vjust = -0.3, size = 3.5, color = "gray30") +
  labs(
    title = "Share of mechanized fertilizer application by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of mechanized fertilizer application"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


#### Transport

```{r}
mecha_transport <- mecha_by_area |>
  filter(OPERATION == "TRANSPORT") |>
  group_by(bin_size) |>
  summarise(
    total = n(),
    mechanized = sum(mech_used == "TRUE"),
    share_mech_transport = mechanized / total
  )
```

```{r}
mecha_transport |>
  ggplot(aes(x = bin_size, y = share_mech_transport)) +
  geom_col(fill = "goldenrod2") +
  geom_text(aes(label = total), vjust = -0.3, size = 3.5, color = "gray30") +
  labs(
    title = "Share of mechanized transport by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of mechanized transport"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


### Par outil

#### Tous les outils

Je regarde l'utilisation des outils en fonction de la superficie du champ.

```{r}
outils <- c("TR", "SP", "DS", "SM", "PT", "SD", "ET", "TH", "CH", "MK", "DP")

# Identifier les champs utilisant au moins un outil (toutes opérations confondues)
with_tools <- Cultivation_expand |>
  filter(SEASON == "KHARIF", CROP == "PADDY", !is.na(NAME_MAT)) |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP) |>
  summarise(tool_used = any(NAME_MAT %in% outils), .groups = "drop")
```

```{r}
plots_with_tools <- with_tools |> summarise(nb_champs_outils = sum(tool_used == TRUE))
all_paddy_plots <- with_tools |> distinct(VDS_ID, PLOT_CODE, AREA_CROP)

cat("Nombre de champs utilisant au moins un outil :", plots_with_tools$nb_champs_outils, "\n")
cat("Sur un total de", nrow(all_paddy_plots), "champs en riz et Kharif soit", round(100 * plots_with_tools$nb_champs_outils / nrow(all_paddy_plots), 1), "%\n")
```

```{r}
with_tools <- with_tools |>
  mutate(bin_size = cut(
      AREA_CROP,
      breaks = c(seq(0, 5, by = 0.25), Inf),
      right = TRUE,
      include.lowest = TRUE)) |>
  filter(!is.na(bin_size)) |>
  group_by(bin_size) |>
  summarise(
    total = n(),
    tools = sum(tool_used == TRUE),
    share_tools = tools / total
  )
```

```{r}
with_tools |>
  ggplot(aes(x = bin_size, y = share_tools)) +
  geom_col(fill = "darkolivegreen3") +
  geom_text(aes(label = total), vjust = 1.5, size = 3.5, color = "white") +
  labs(
    title = "Share of plots with tools by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of plots with tools"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


#### Seulement les tracteurs

```{r}
# Identifier les champs avec un tracteur (toutes opérations confondues)
with_tractor <- Cultivation_expand |>
  filter(SEASON == "KHARIF", CROP == "PADDY", !is.na(NAME_MAT)) |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP) |>
  summarise(tractor = any(NAME_MAT == "TR"), .groups = "drop")
```

```{r}
plots_with_tractor <- with_tractor |> summarise(nb_tractor = sum(tractor == TRUE))

cat("Nombre de champs utilisant au moins un outil :", plots_with_tractor$nb_tractor, "\n")
cat("Sur un total de", nrow(all_paddy_plots), "champs en riz et Kharif soit", round(100 * plots_with_tractor$nb_tractor / nrow(all_paddy_plots), 1), "%\n")
```

```{r}
with_tractor <- with_tractor |>
  mutate(bin_size = cut(
      AREA_CROP,
      breaks = c(seq(0, 5, by = 0.25), Inf),
      right = TRUE,
      include.lowest = TRUE)) |>
  filter(!is.na(bin_size)) |>
  group_by(bin_size) |>
  reframe(
    total = n(),
    all_tractor = sum(tractor == TRUE),
    share_tractor = all_tractor / total
  )
```

```{r}
with_tractor |>
  ggplot(aes(x = bin_size, y = share_tractor)) +
  geom_col(fill = "burlywood3") +
  geom_text(aes(label = total), vjust = 1.5, size = 3.5, color = "white") +
  labs(
    title = "Share of plots with a tractor by plot size",
    x = "Plot size (in acres)",
    y = "Proportion of plots using a tractor"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


********************************************************************************

## Mécanisation de labour

La mécanisation (ou non) du labour a un impact sur la demande pour d'autres opérations, notamment hand weeding (Afridi, 2023). 

Dans cette partie, on étudie la proportion de champs pour lesquels le labourage est mécanisé, selon la caste, puis comment la mécanisation du labourage impacte le temps de travail total et par opération. 


### Nombre de champs mécanisant le labour par caste

```{r}
# Identifier les champs (riz + Kharif) mécanisant land preparation
mechanized_tilling <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP),
         CROP == "PADDY",
         SEASON == "KHARIF",
         OPERATION == "LAND PREPARATION"
         ) |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, OPERATION, CASTE_GROUP) |>
  mutate(MACHINERY = replace_na(MACHINERY, "Non mécanisé")) |>
  reframe(mechanized_tilling = any(MACHINERY == "Mécanisé")) 
  # conserver les champs pour lesquels land preparation = n/a
```

```{r}
# Nombre de champs avec ou sans mécanisation de land preparation par caste 
mechanized_tilling |>
  group_by(CASTE_GROUP, mechanized_tilling) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(CASTE_GROUP, mechanized_tilling, proportion) |>
  pivot_wider(
    names_from = mechanized_tilling,
    values_from = proportion,
    values_fill = 0
  ) |>
  arrange(desc(TRUE))
```


## Hr/acre en fonction de la mécanisation du labour

```{r}
# Ajouter les heures de travail totales (toutes opérations sauf land preparation)
hacre_all_labor <- hacre_all_labor |>
  group_by(VDS_ID, PLOT_CODE, AREA_CROP, CASTE_GROUP, MACHINERY) |>
  filter(OPERATION != "LAND PREPARATION") |>
  mutate(ALL_OPER = sum(ALL_WORK, na.rm = TRUE), 
         HR_ACRE_ALL_OPER = ALL_OPER/AREA_CROP,
         .groups = "drop")
```

```{r}
# Enlever les champs mécanisés, par opération
with_mecha_tilling <- hacre_all_labor |>
  left_join(mechanized_tilling |> select(-c(CASTE_GROUP, OPERATION)), 
            by = c("VDS_ID", "PLOT_CODE", "AREA_CROP")) |>
  left_join(with_mecha, by = c("VDS_ID", "PLOT_CODE", "AREA_CROP", "OPERATION")) |>
  filter(mech_used == FALSE) |>
  
# Ajouter le nombre d'observations par opération et caste (LAB_TYPE identique pour tous)
  group_by(CASTE_GROUP, mechanized_tilling) |>
  mutate(nb_obs = n()) |>
  ungroup()
```


### Temps de travail total

On regarde le ratio Hr/acre du champ selon la mécanisation ou non du labour, par caste, en ne conservant que les opérations non mécanisées. 

```{r}
# Calculer la moyenne de Hr/acre pour toutes les opérations selon la caste et la mécanisation de land preparation
all_oper_mean <- with_mecha_tilling |>
  group_by(CASTE_GROUP, mechanized_tilling, nb_obs) |>
  summarise(
    MEAN_HACRE_OPER = mean(HR_ACRE_ALL_OPER, na.rm = TRUE),
    .groups = "drop"
    ) 
```

```{r}
all_oper_mean |>
  ggplot(aes(x = reorder(CASTE_GROUP, MEAN_HACRE_OPER), y = MEAN_HACRE_OPER, fill = mechanized_tilling)) +
  geom_col(position = "dodge") +
  coord_flip() +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    aes(label = nb_obs, y = MEAN_HACRE_OPER / 2),
    position = position_dodge(width = 0.9),
    size = 3.5,
    color = "white"
  ) +
  
  scale_fill_manual(
    values = c("TRUE" = "seagreen2", "FALSE" = "cornflowerblue"),
    labels = c("TRUE" = "Mechanized", "FALSE" = "Non-mechanized"),
    name = "Land preparation"
  ) +

  labs(
    title = "Hr/acre for non-mechanized operations depending on mechanized tilling,  by caste",
    x = "",
    y = "Average working hours for non-mechanized operations except land preparation"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```

```{r}
mechanized_tilling |>
  group_by(CASTE_GROUP, mechanized_tilling) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(CASTE_GROUP, mechanized_tilling, proportion) |>
  pivot_wider(
    names_from = mechanized_tilling,
    values_from = proportion,
    values_fill = 0
  )
```


### Par opération

#### Hand weeding

```{r}
# Calculer la moyenne de Hr/acre pour hand weeding selon la caste et la mécanisation de land preparation
weeding_with_land <- with_mecha_tilling |>
  filter(OPERATION == "HAND WEEDING") |>
  group_by(CASTE_GROUP, mechanized_tilling) |>
  mutate(nb_obs = n()) |>
  ungroup() |>
  group_by(CASTE_GROUP, mechanized_tilling, nb_obs) |>
  summarise(
    MEAN_HACRE_ALL = mean(HR_ACRE_ALL, na.rm = TRUE),
    .groups = "drop"
    )
```

```{r}
weeding_with_land |>
  ggplot(aes(x = reorder(CASTE_GROUP, MEAN_HACRE_ALL), y = MEAN_HACRE_ALL, fill = mechanized_tilling)) +
  geom_col(position = "dodge") +
  coord_flip() +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    aes(label = nb_obs, y = MEAN_HACRE_ALL / 2),
    position = position_dodge(width = 0.9),
    size = 3.5,
    color = "white"
  ) +
  
  scale_fill_manual(
    values = c("TRUE" = "seagreen2", "FALSE" = "cornflowerblue"),
    labels = c("TRUE" = "Mechanized", "FALSE" = "Non-mechanized"),
    name = "Land preparation"
  ) +

  labs(
    title = "Hr/acre for hand weeding depending on mechanized tilling, by caste",
    x = "",
    y = "Average working hours for hand weeding"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```


#### Transplanting

```{r}
# Calculer la moyenne de Hr/acre pour transplanting selon la caste et la mécanisation de land preparation
transplanting_with_land <- with_mecha_tilling |>
  filter(OPERATION == "TRANSPLANTING") |>
  group_by(CASTE_GROUP, mechanized_tilling) |>
  mutate(nb_obs = n()) |>
  ungroup() |>
  group_by(CASTE_GROUP, mechanized_tilling, nb_obs) |>
  summarise(
    MEAN_HACRE_ALL = mean(HR_ACRE_ALL, na.rm = TRUE),
    .groups = "drop"
    )
```

```{r}
transplanting_with_land |>
  ggplot(aes(x = reorder(CASTE_GROUP, MEAN_HACRE_ALL), y = MEAN_HACRE_ALL, fill = mechanized_tilling)) +
  geom_col(position = "dodge") +
  coord_flip() +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    aes(label = nb_obs, y = MEAN_HACRE_ALL / 2),
    position = position_dodge(width = 0.9),
    size = 3.5,
    color = "white"
  ) +
  
  scale_fill_manual(
    values = c("TRUE" = "seagreen2", "FALSE" = "cornflowerblue"),
    labels = c("TRUE" = "Mechanized", "FALSE" = "Non-mechanized"),
    name = "Land preparation"
  ) +

  labs(
    title = "Hr/acre for non-mechanized transplanting depending on mechanized tilling, by caste",
    x = "",
    y = "Average working hours for non-mechanized transplanting"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```


#### Harvesting & Threshing

```{r}
# Calculer la moyenne de Hr/acre pour Harvesting & Threshing selon la caste et la mécanisation de land preparation
harvesting_with_land <- with_mecha_tilling |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  group_by(CASTE_GROUP, mechanized_tilling) |>
  mutate(nb_obs = n()) |>
  ungroup() |>
  group_by(CASTE_GROUP, mechanized_tilling, nb_obs) |>
  summarise(
    MEAN_HACRE_ALL = mean(HR_ACRE_ALL, na.rm = TRUE),
    .groups = "drop"
    )
```

```{r}
harvesting_with_land |>
  ggplot(aes(x = reorder(CASTE_GROUP, MEAN_HACRE_ALL), y = MEAN_HACRE_ALL, fill = mechanized_tilling)) +
  geom_col(position = "dodge") +
  coord_flip() +
  
# Ajouter le nombre d'observations par caste
  geom_text(
    aes(label = nb_obs, y = MEAN_HACRE_ALL / 2),
    position = position_dodge(width = 0.9),
    size = 3.5,
    color = "white"
  ) +
  
  scale_fill_manual(
    values = c("TRUE" = "seagreen2", "FALSE" = "cornflowerblue"),
    labels = c("TRUE" = "Mechanized", "FALSE" = "Non-mechanized"),
    name = "Land preparation"
  ) +

  labs(
    title = "Hr/acre for non-mechanized harvesting depending on mechanized tilling, by caste",
    x = "",
    y = "Average working hours for non-mechanized harvesting"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```





