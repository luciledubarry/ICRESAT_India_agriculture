---
title: "Analyse par caste de la base Cultivation 2014"
format: html
editor: source
---

```{r, message=FALSE, warning=FALSE}
rm(list = ls())
graphics.off()
cat("\014")
```

```{r, message=FALSE, warning=FALSE}
here::i_am("ICRESAT_database_analysis/scripts_2014/Analyse_caste.qmd")
library(dplyr)
library(tidyr)
library(readxl)
library(ggplot2)
library(scales)
library(knitr)
library(tibble)
library(tidyverse)
library(gt)
```

```{r}
Cultivation_expand <- readRDS(here::here("Base de données générées", "Cultivation_expand", "Cultivation_expand.rds"))
```


********************************************************************************

## Champs/ménages par caste

```{r}
Cultivation_expand |>
  group_by(CASTE_GROUP) |>
  summarise(
    `Nombre de ménages` = n_distinct(VDS_ID),
    `Champs par saison` = n_distinct(paste(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, SEASON, sep = "_"))
  ) |>
  gt() |>
  tab_header(
    title = "Ménages et champs par caste"
  ) |>
  cols_label(
    CASTE_GROUP = "Caste"
  )
```


```{r}
# 1. Comptage des champs
# J'inclue SEASON pour identifier le ménage pour compenser de compter en double les champs (pour les deux saisons).
plot_per_hh <- Cultivation_expand |>
  distinct(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, CROP, SEASON) |>
  group_by(VDS_ID, SEASON) |> 
  summarise(nb_cultures = n_distinct(SUB_PLOT_CODE), .groups = "drop")

# 2. Rattacher la caste à chaque ménage
nb_caste <- Cultivation_expand |>
  select(VDS_ID, CASTE_GROUP) |>
  distinct() |>
  filter(!is.na(CASTE_GROUP)) |>
  left_join(plot_per_hh, by = "VDS_ID")
```

```{r, message=FALSE, warning=FALSE}
nb_caste |>
  group_by(CASTE_GROUP) |>
  summarise(
    `Champs par ménage` = round(mean(nb_cultures, na.rm = TRUE), 1),
    .groups = "drop"
  ) |>
  gt() |>
  tab_header(
    title = "Champs par ménage selon la caste"
  ) |>
  cols_label(
    CASTE_GROUP = "Caste"
  )
```


********************************************************************************

PARTIE A REVOIR: Résultats incohérents entre le nombre de champs par culture en Kharif et celui en Rabi 


## Crop choice

### Par champ

Combien de champs font du riz en Kharif ? 

```{r}
crop_choice_kharif <- Cultivation_expand |>
  filter(SEASON == "KHARIF") |>
  distinct(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, CROP)

total_champs_kharif <- n_distinct(crop_choice_kharif$VDS_ID, crop_choice_kharif$PLOT_CODE, crop_choice_kharif$SUB_PLOT_CODE, crop_choice_kharif$CROP)

crop_choice_kharif|>
  count(CROP, sort = TRUE) |>
  mutate(percentage = round(100 * n / total_champs_kharif, 1))
```

On regarde sur les champs ayant eu du riz en Kharif, quelle est la culture faite en Rabi (en incluant la jachère) ?

VERIF : Pourquoi il y a 1300 champs de riz en Kharif, mais seulement environ 900 champs restants en Rabi (les jachères sont inclus normalement dans CROP) ?

```{r}
# Identifier les champs ayant fait du riz en Kharif
plot_paddy_kharif <- Cultivation_expand |>
  filter(CROP == "PADDY", SEASON == "KHARIF") |>
  distinct(VDS_ID) |>
  mutate(PADDY_KHARIF = TRUE)
```

```{r}
crop_choice_rabi <- Cultivation_expand |>
  left_join(plot_paddy_kharif, by = c("VDS_ID")) |>
  filter(PADDY_KHARIF == TRUE, SEASON == "RABI") |>
  distinct(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, SEASON, CROP, CASTE_GROUP, IRRIGATION)

# Nombre total de champs ayant eu du riz en Kharif
total_champs_rabi <- n_distinct(crop_choice_rabi$VDS_ID, crop_choice_rabi$PLOT_CODE, crop_choice_rabi$SUB_PLOT_CODE)

# Comptage des cultures en Rabi
crop_rabi <- crop_choice_rabi |>
  count(CROP, sort = TRUE) |>
  mutate(percentage = round(100 * n / total_champs_rabi, 1))
crop_rabi
```

Le blé est le principal choix de culture en Rabi, parès une culture de riz en Kharif. Quelle est la part d'irrigation des champs de blé dans cette situation ?

```{r}
crop_choice_rabi |>
  filter(CROP == "WHEAT") |>
  count(IRRIGATION, sort = TRUE) |>
  mutate(
    total_wheat = sum(n),
    percentage = round(100 * n / total_wheat, 1)
  )
```

#### Selon la caste

Même réflexion, on regarde quels sont les choix de cultures en Rabi après une culture de riz en Kharif, cette fois-ci selon la caste. 

```{r}
crop_choice_rabi |>
  filter(CROP %in% c("WHEAT", "LENTIL", "BLACK GRAM", "PADDY")) |>
  group_by(CASTE_GROUP, CROP) |>
  summarise(n = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(n),
    percentage = round(100 * n / total, 1)
  ) |>
  arrange(CASTE_GROUP, CROP)
```


### Par ménage

On regarde la diversité de cultures faites par les ménages qui font du riz en Kharif. Combien de ménages ont une autre culture en Kharif (en plus du riz) ? 

```{r}
# Identifier les ménages ayant fait du riz en Kharif
hh_paddy_kharif <- Cultivation_expand |>
  filter(CROP == "PADDY", SEASON == "KHARIF") |>
  distinct(VDS_ID) |>
  mutate(PADDY_KHARIF = TRUE)
```

```{r}
# Garder les ménages concernés en supprimant les champs de riz en Kharif
hh_other_cultiv <- Cultivation_expand |>
  filter(SEASON == "KHARIF", CROP != "PADDY") |>
  semi_join(hh_paddy_kharif, by = "VDS_ID")

cat("Nombre de ménages ayant, en plus du riz, une autre culture en Kharif :", n_distinct(hh_other_cultiv$VDS_ID), "\n sur", nrow(hh_paddy_kharif |> filter(PADDY_KHARIF)), "ménages faisant du riz en Kharif")
```
vérifier en nombre de champs et nombre de méange, pour avoir un résultat cohérent avec la partie précédente

```{r}
hh_other_cultiv |>
  distinct(VDS_ID, SUB_PLOT_CODE, CROP) |>
  count(CROP, sort = TRUE)
```

Pour les ménages ayant une autre culture en plus du riz en Kharif, quelle est la proportion de terre par ménage qui soit dédiée à cette autre culture ?

```{r}
# Garder seulement les ménages avec PADDY + autre culture en Kharif
area_plot_kharif <- Cultivation_expand |>
  filter(SEASON == "KHARIF") |>
  semi_join(hh_paddy_kharif, by = "VDS_ID") |>
  distinct(VDS_ID, SUB_PLOT_CODE, CROP, AREA_CROP) |>
  group_by(VDS_ID) |>
  filter(n_distinct(CROP) > 1) |>
  ungroup()

# Calcul de la superficie par ménage
area_summary <- area_plot_kharif |>
  group_by(VDS_ID) |>
  summarise(
    total_area = sum(AREA_CROP, na.rm = TRUE),
    non_paddy_area = sum(AREA_CROP[CROP != "PADDY"], na.rm = TRUE),
    proportion_non_paddy = round(100 * non_paddy_area / total_area, 1),
    .groups = "drop"
  )
area_summary
```

```{r}
ggplot(area_summary, aes(x = proportion_non_paddy)) +
  geom_histogram(fill = "palegreen2", color = "palegreen4", alpha = 0.8) +
  labs(
    title = "Ménages cultivant du riz en Kharif: Superficie des champs hors riz",
    x = "Superficie par ménage des champs en Kharif hors riz (%)",
    y = "Nombre de ménages"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14),
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 12)
  )
```

inclure dans ce graph les méange qui font que du riz en Kharif seront à 0%) et ceux qui n'en font pas (seront normalement à 100%)


********************************************************************************

## Cultures par caste

### En nombre de champs

Je comptabilise le nombre de champs distincts pour les principales cultures selon la caste. 

```{r}
nb_champs_caste_crop <- Cultivation_expand |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN"),
         !is.na(CASTE_GROUP)) |>
  mutate(CHAMP_ID = paste(VDS_ID, SUB_PLOT_CODE, SEASON, CROP, sep = "_")) |>
  distinct(CASTE_GROUP, CROP, CHAMP_ID) |>
  count(CASTE_GROUP, CROP, name = "NB_CHAMPS") |>
  pivot_wider(
    names_from = CROP,
    values_from = NB_CHAMPS,
    values_fill = 0
  ) |>
  mutate(
    TOTAL_CHAMPS = PADDY + WHEAT + MAIZE + COTTON + SOYBEAN
  ) |>
  arrange(desc(TOTAL_CHAMPS))

nb_champs_caste_crop
```

```{r}
nb_champs_caste_crop_pct <- nb_champs_caste_crop |>
  mutate(
    PADDY_PCT = round(100 * PADDY / TOTAL_CHAMPS, 0),
    WHEAT_PCT = round(100 * WHEAT / TOTAL_CHAMPS, 0),
    MAIZE_PCT = round(100 * MAIZE / TOTAL_CHAMPS, 0),
    COTTON_PCT = round(100 * COTTON / TOTAL_CHAMPS, 0),
    SOYBEAN_PCT = round(100 * SOYBEAN / TOTAL_CHAMPS, 0)
  ) |>
  select(CASTE_GROUP, PADDY_PCT, WHEAT_PCT, MAIZE_PCT, COTTON_PCT, SOYBEAN_PCT)

nb_champs_caste_crop_pct
```

### En temps de travail

Sur quelles cultures chaque caste travaillent le plus ? 

```{r}
work_hr_caste_crop <- Cultivation_expand |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN"),
         !is.na(CASTE_GROUP)) |>
  group_by(CASTE_GROUP, CROP) |>
  summarise(WORK_HR_CROP = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>
  tidyr::pivot_wider(
    names_from = CROP,
    values_from = WORK_HR_CROP,
    values_fill = 0
  ) |>
  mutate(TOTAL_WORK_HR = PADDY + WHEAT + MAIZE + COTTON + SOYBEAN) |>
  mutate(
    PADDY_PCT = round(100 * PADDY / TOTAL_WORK_HR, 0),
    WHEAT_PCT = round(100 * WHEAT / TOTAL_WORK_HR, 0),
    MAIZE_PCT = round(100 * MAIZE / TOTAL_WORK_HR, 0),
    COTTON_PCT = round(100 * COTTON / TOTAL_WORK_HR, 0),
    SOYBEAN_PCT = round(100 * SOYBEAN / TOTAL_WORK_HR, 0)
  ) |>
  select(CASTE_GROUP, PADDY_PCT, WHEAT_PCT, MAIZE_PCT, COTTON_PCT, SOYBEAN_PCT)

work_hr_caste_crop
```


********************************************************************************

## Superficie par caste

### Par champ

#### Toutes cultures

```{r}
# Superficie moyenne de chaque champ (culture distincte) par caste
area_by_caste <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP), CASTE_GROUP != "OTHER") |>
  mutate(CHAMP_ID = paste(VDS_ID, SUB_PLOT_CODE, SEASON, CROP, sep = "_")) |>
  group_by(CASTE_GROUP, CHAMP_ID) |>
  summarise(AREA = mean(AREA_CROP, na.rm = TRUE), .groups = "drop")
```

```{r, message=FALSE, warning=FALSE}
area_by_caste |>
  ggplot(aes(x = CASTE_GROUP, y = AREA, fill = CASTE_GROUP)) +
  geom_boxplot(width = 0.6, alpha = 0.8) +
  coord_flip() +
  ylim(0, 15) +
  labs(
    title = "Superficie des champs par caste",
    x = "",
    y = "Superficie par champ (en acres)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 12),
    legend.position = "none"
  )
```


#### Seulement le riz

```{r}
# Superficie moyenne de chaque champ (culture distincte) par caste
# Filtre pour le riz en Kharif
area_by_caste_paddy <- Cultivation_expand |>
  filter(CROP == "PADDY",
         SEASON == "KHARIF",
         !is.na(CASTE_GROUP), 
         CASTE_GROUP != "OTHER"
         ) |>
  mutate(CHAMP_ID = paste(VDS_ID, SUB_PLOT_CODE, SEASON, CROP, sep = "_")) |>
  group_by(CASTE_GROUP, CHAMP_ID) |>
  summarise(AREA = mean(AREA_CROP, na.rm = TRUE), .groups = "drop")
```

```{r, message=FALSE, warning=FALSE}
area_by_caste_paddy |>
  ggplot(aes(x = CASTE_GROUP, y = AREA, fill = CASTE_GROUP)) +
  geom_boxplot(width = 0.6, alpha = 0.8) +
  coord_flip() +
  ylim(0, 5) +
  labs(
    title = "Superficie des champs par caste",
    x = "",
    y = "Superficie par champ (en acres)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 12),
    legend.position = "none"
  )
```


### Par ménage

#### Toutes cultures

```{r}
# Superficie moyenne détenue par un même ménage en Kharif (peut avoir plusieurs champs de cultures différentes) par caste
plot_per_caste <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP), 
         CASTE_GROUP != "OTHER",
         SEASON == "KHARIF") |>
  distinct(VDS_ID, SUB_PLOT_CODE, AREA_CROP, CASTE_GROUP, CROP) |>
  group_by(VDS_ID, CASTE_GROUP) |>
  summarise(area_hh = sum(AREA_CROP, na.rm = TRUE), .groups = "drop")
```

Ajouter SEASON ou non ? Je peux pas mettre CROP sans inclure SEASON

```{r, message = FALSE, warning = FALSE}
plot_per_caste |>
  ggplot(aes(x = CASTE_GROUP, y = area_hh, fill = CASTE_GROUP)) +
  geom_boxplot(position = position_dodge(width = 0.7), width = 0.6, alpha = 0.8) +
  coord_flip() +
  ylim(0, 20) +
  labs(
    title = "Superficie détenue par ménage par caste (Kharif)",
    x = "",
    y = "Superficie par ménage (en acres)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 12),
    legend.position = "none"
  )
```


#### Seulement le riz

```{r}
# Superficie moyenne détenue par un même ménage en Kharif (peut avoir plusieurs champs de cultures différentes) par caste
# Filtrer pour le riz en Kharif
plot_per_caste_paddy <- Cultivation_expand |>
  filter(CROP == "PADDY", 
         !is.na(CASTE_GROUP), 
         CASTE_GROUP != "OTHER",
         SEASON == "KHARIF") |>
  distinct(VDS_ID, SUB_PLOT_CODE, AREA_CROP, CASTE_GROUP) |>
  group_by(VDS_ID, CASTE_GROUP) |>
  summarise(area_hh = sum(AREA_CROP, na.rm = TRUE), .groups = "drop")
```

```{r, message = FALSE, warning = FALSE}
plot_per_caste_paddy |>
  ggplot(aes(x = CASTE_GROUP, y = area_hh, fill = CASTE_GROUP)) +
  geom_boxplot(position = position_dodge(width = 0.7), width = 0.6, alpha = 0.8) +
  coord_flip() +
  ylim(0, 10) +
  labs(
    title = "Superficie détenue par ménage par caste (riz en Kharif)",
    x = "",
    y = "Superficie par ménage (en acres)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 12),
    legend.position = "none"
  )
```


********************************************************************************

## Hr/acre selon la caste

On regarde la moyenne des heures de travail par acre (Hr/acre) selon la caste, en distinguant pour le type de travail (familial/employé) et le genre.

On se concentre sur la culture du riz en Kharif. 

```{r}
# 1. Somme des heures de travail par champ, caste et lab_type
labor_caste <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP),
         CROP == "PADDY", 
         SEASON == "KHARIF",
         LAB_TYPE %in% c("HF", "FF", "HM", "FM")) |>
  group_by(VDS_ID, SUB_PLOT_CODE, CROP, SEASON, CASTE_GROUP, LAB_TYPE, AREA_CROP) |>
  summarise(TOTAL_HOURS = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>

# 2. Pivoter et créer les valeurs 0 quand le travail est nul
  pivot_wider(
    names_from = LAB_TYPE,
    values_from = TOTAL_HOURS,
    values_fill = 0
  ) |>

# 3. Calculer le travail total selon le genre
  mutate(
    WORK_F = HF + FF,
    WORK_M = HM + FM,
    WORK_T = WORK_F + WORK_M,
    WORK_HT = HF + HM,
    WORK_FT = FM + FF
  )
```

```{r}
# Calculer le ratio Hr/acre selon le type de travail
hr_acre_caste <- labor_caste |>
  filter(AREA_CROP != 0) |>
  mutate(
    HR_ACRE_HF = HF/AREA_CROP,
    HR_ACRE_FF = FF/AREA_CROP,
    HR_ACRE_F = WORK_F/AREA_CROP,
    HR_ACRE_FM = FM/AREA_CROP,
    HR_ACRE_HM = HM/AREA_CROP,
    HR_ACRE_M = WORK_M/AREA_CROP,
    HR_ACRE_T = WORK_T/AREA_CROP,
    HR_ACRE_FT = WORK_FT/AREA_CROP,
    HR_ACRE_HT = WORK_HT/AREA_CROP
  )
```


### Travail total

Tout d'abord, on regarde la moyenne du ratio Hr/acre pour le travail total (féminin et masculin) selon la caste. 

```{r}
# Calculer la moyenne de Hr/acre selon la caste
hr_acre_caste_T <- hr_acre_caste |>
  group_by(CASTE_GROUP) |>
  summarise(
    MEAN_HACRE_HT = mean(HR_ACRE_HT, na.rm = TRUE),
    MEAN_HACRE_FT = mean(HR_ACRE_FT, na.rm = TRUE),
    MEAN_HACRE_WORK_T = mean(HR_ACRE_T, na.rm = TRUE)
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_T, MEAN_HACRE_HT, MEAN_HACRE_FT),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
plot_hr_acre_caste_T <- hr_acre_caste_T |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  labs(
    title = "Total labor time per acre, by employment and caste",
    x = "",
    y = "Average working hours per acre per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_T" = "lightblue4",
               "MEAN_HACRE_HT" = "lightblue2", 
               "MEAN_HACRE_FT" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_T" = "Total labor",
      "MEAN_HACRE_HT" = "Hired labor",
      "MEAN_HACRE_FT" = "Family labor"
    ),
    name = "Labor type"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )

plot_hr_acre_caste_T
```

```{r}
ggsave("figures/Hr_acre_caste_T.png", plot = plot_hr_acre_caste_T, width = 8, height = 6, dpi = 300)
```


### Travail féminin

#### Champs de riz

```{r}
# Calculer la moyenne de Hr/acre pour les femmes selon la caste
hr_acre_caste_F <- hr_acre_caste |>
  group_by(CASTE_GROUP) |>
  summarise(
    MEAN_HACRE_HF = mean(HR_ACRE_HF, na.rm = TRUE),
    MEAN_HACRE_FF = mean(HR_ACRE_FF, na.rm = TRUE),
    MEAN_HACRE_WORK_F = mean(HR_ACRE_F, na.rm = TRUE)
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_F, MEAN_HACRE_HF, MEAN_HACRE_FF),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
plot_hr_acre_caste_F <- hr_acre_caste_F |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  labs(
    title = "Female labor time per acre, by employment and caste",
    x = "",
    y = "Average working hours per acre per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_F" = "lightblue4",
               "MEAN_HACRE_HF" = "lightblue2", 
               "MEAN_HACRE_FF" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_F" = "Total labor",
      "MEAN_HACRE_HF" = "Hired labor",
      "MEAN_HACRE_FF" = "Family labor"
    ),
    name = "Female labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )

plot_hr_acre_caste_F
```

```{r}
ggsave("figures/Hr_acre_caste_F.png", plot = plot_hr_acre_caste_F, width = 8, height = 6, dpi = 300)
```


#### Ménages avec riz

A FINIR

Le but est de regarder le temps de travail féminin selon la caste, exclusivement pour les ménages cultivant du riz en Kharif.

```{r}
# Identifier les ménages ayant fait du riz en Kharif
hh_paddy_kharif <- Cultivation_expand |>
  filter(CROP == "PADDY", SEASON == "KHARIF") |>
  distinct(VDS_ID) |>
  mutate(PADDY_KHARIF = TRUE)

# Superficie totale par ménage (pour les ménages faisant du riz en Kharif uniquement)
hh_area <- Cultivation_expand |>
  filter(SEASON == "KHARIF") |>
  distinct(VDS_ID, SUB_PLOT_CODE, AREA_CROP) |>
  group_by(VDS_ID) |>
  summarise(HH_AREA = sum(AREA_CROP, na.rm = TRUE), .groups = "drop")
```

```{r}
# Heures de travail totales par ménage, caste et lab_type 
hh_labor <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP), SEASON == "KHARIF",
         LAB_TYPE %in% c("HF", "FF", "HM", "FM")) |>
  group_by(VDS_ID, LAB_TYPE, CASTE_GROUP) |>
  summarise(HH_HOURS = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>
  pivot_wider(
    names_from = LAB_TYPE,
    values_from = HH_HOURS,
    values_fill = 0
  ) |>
  mutate(
    WORK_F = HF + FF,
    WORK_M = HM + FM
  ) |>
  semi_join(hh_paddy_kharif, by = "VDS_ID") |>  
  # filtrer les ménages ayant fait du riz
  left_join(hh_area, by = "VDS_ID")
  # ajouter la surface totale
```

```{r}
# Calculer Hr/acre en considérant la superficie totale du ménage
hh_labor <- hh_labor |>
  mutate(
    HR_ACRE_HF = HF/HH_AREA,
    HR_ACRE_FF = FF/HH_AREA,
    HR_ACRE_F = WORK_F/HH_AREA,
    HR_ACRE_FM = FM/HH_AREA,
    HR_ACRE_HM = HM/HH_AREA,
    HR_ACRE_M = WORK_M/HH_AREA
  )

# Calculer la moyenne de Hr/acre pour les femmes selon la caste
hh_labor_F <- hh_labor |>
  group_by(CASTE_GROUP) |>
  summarise(
    MEAN_HACRE_HF = mean(HR_ACRE_HF, na.rm = TRUE),
    MEAN_HACRE_FF = mean(HR_ACRE_FF, na.rm = TRUE),
    MEAN_HACRE_WORK_F = mean(HR_ACRE_F, na.rm = TRUE)
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_F, MEAN_HACRE_HF, MEAN_HACRE_FF),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
hh_labor_F |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  labs(
    title = "Female labor time per acre, by employment and caste",
    x = "",
    y = "Average working hours per acre per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_F" = "lightblue4",
               "MEAN_HACRE_HF" = "lightblue2", 
               "MEAN_HACRE_FF" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_F" = "Total labor",
      "MEAN_HACRE_HF" = "Hired labor",
      "MEAN_HACRE_FF" = "Family labor"
    ),
    name = "Female labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```


Questions suivantes : 

- Graphique sur Hr/acre par caste : les refaire en considérant la superficie par ménage (plutôt que par champ) -> calculer la superficie totale par ménage et le temps de travail total  

- Regarder le même graphique pour toutes les cultures confondues (pas seulement le riz), si ça change pas l'ordre des castes, c'est bon signe 



### Travail masculin

```{r}
# Calculer la moyenne de Hr/acre pour les hommes selon la caste
hr_acre_caste_M <- hr_acre_caste |>
  group_by(CASTE_GROUP) |>
  summarise(
    MEAN_HACRE_FM = mean(HR_ACRE_FM, na.rm = TRUE),
    MEAN_HACRE_HM = mean(HR_ACRE_HM, na.rm = TRUE),
    MEAN_HACRE_WORK_M = mean(HR_ACRE_M, na.rm = TRUE)
    ) |>
    pivot_longer(
    cols = c(MEAN_HACRE_WORK_M, MEAN_HACRE_HM, MEAN_HACRE_FM),
    names_to = "Lab_type",
    values_to = "Mean_hours"
  ) 
```

```{r}
plot_hr_acre_caste_M <- hr_acre_caste_M |>
  ggplot(aes(x = reorder(CASTE_GROUP, Mean_hours), y = Mean_hours, fill = Lab_type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  labs(
    title = "Male labor time per acre, by employment and caste",
    x = "",
    y = "Average working hours per acre per season",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("MEAN_HACRE_WORK_M" = "lightblue4",
               "MEAN_HACRE_HM" = "lightblue2", 
               "MEAN_HACRE_FM" = "violet"),
        labels = c(
      "MEAN_HACRE_WORK_M" = "Total labor",
      "MEAN_HACRE_HM" = "Hired labor",
      "MEAN_HACRE_FM" = "Family labor"
    ),
    name = "Male labor"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )

plot_hr_acre_caste_M
```

```{r}
ggsave("figures/Hr_acre_caste_M.png", plot = plot_hr_acre_caste_M, width = 8, height = 6, dpi = 300)
```


********************************************************************************

## Selon la superficie 

### Travail total 

```{r, message=FALSE, warning=FALSE}
# Différencié par caste ; seulement pour le riz en Kharif
plot_work_T_area <- hr_acre_caste |>
  ggplot(aes(x = AREA_CROP, y = HR_ACRE_T, color = CASTE_GROUP)) +
  geom_point(alpha = 0.2) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 3), ylim = c(0, 800)) +
  labs(
    title = "Relationship between total labor and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Labor hours per acre",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 12, color = "gray20"),
    axis.title = element_text(size = 13, color = "gray20"),
    legend.title = element_text(size = 13),
    legend.text = element_text(size = 12)
    )

plot_work_T_area 
```

```{r}
ggsave("figures/Work_T_superficie.png", plot = plot_work_T_area, width = 8, height = 6, dpi = 300)
```


### Travail féminin familial

```{r, message=FALSE}
# Toutes les castes confondues ; seulement travail familial
labor_caste |>
  ggplot(aes(x = AREA_CROP, y = FF)) +
  geom_point(alpha = 0.3, color = "limegreen") +
  geom_smooth(method = "loess", se = TRUE, color = "deepskyblue3", linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 3), ylim = c(0, 200)) +
  labs(
    title = "Relation entre travail féminin familial et superficie (toutes castes)",
    x = "Superficie (en acre)",
    y = "Heures de travail féminin familial"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 10, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20")
    )
```

```{r, message=FALSE, warning=FALSE}
# Différencié par caste ; seulement travail familial
# Seulement pour le riz en Kharif
plot_work_FF_area <- labor_caste |>
  ggplot(aes(x = AREA_CROP, y = FF, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 3), ylim = c(0, 400)) +
  labs(
    title = "Relationship between family female labor and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Family female labor hours",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )

plot_work_FF_area 
```

```{r}
ggsave("figures/Work_FF_superficie.png", plot = plot_work_FF_area, width = 8, height = 6, dpi = 300)
```


```{r, message=FALSE, warning=FALSE}
# Différencié par caste ; seulement travail employé
plot_work_HF_area <- labor_caste |>
  ggplot(aes(x = AREA_CROP, y = HF, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
    coord_cartesian(xlim = c(0, 3), ylim = c(0, 400)) +
  labs(
    title = "Relationship between hired female labor and plot size, by caste",
    x = "Plot size (in acres)",
    y = "Hired female labor hours",
    color = "Caste"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )

plot_work_HF_area 
```

```{r}
ggsave("figures/Work_HF_superficie.png", plot = plot_work_HF_area, width = 8, height = 6, dpi = 300)
```

calculer + ajouter au graph écart-type par caste


### Outils (irrigation / méchanisation / HYV)
                      
```{r}
proportion_outils <- Cultivation_expand |>
  filter(!is.na(CASTE_GROUP),
         CROP == "PADDY", 
         SEASON == "KHARIF") |>
  group_by(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, CROP, SEASON, CASTE_GROUP, MACHINERY, IRRIGATION, VAR_TYPE, AREA_CROP) |>
  reframe(
    VAR_TYPE = recode(VAR_TYPE,
                      `2` = "1",
                      `1` = "0",
                      `3` = "0",
                      `4` = "0",
                      `5` = "0"),
    MACHINERY = recode(MACHINERY,
                       `Mécanisé` = "1",
                       `Non mécanisé` = "0"),
    IRRIGATION = recode(IRRIGATION, 
                      `Irrigué` = "1",
                      `Non irrigué` = "0"), 
    .groups = "drop"
  ) |>
   mutate(
    VAR_TYPE = as.numeric(as.character(VAR_TYPE)),
    MACHINERY = as.numeric(as.character(MACHINERY)),
    IRRIGATION = as.numeric(as.character(IRRIGATION))
    )
```

```{r}
mean_outils <- proportion_outils |>
  group_by(AREA_CROP) |>
  summarise(
    mean_mecha = mean(MACHINERY, na.rm = TRUE),
    mean_irri = mean(IRRIGATION, na.rm = TRUE),
    mean_HYV = mean(VAR_TYPE, na.rm = TRUE),
    .groups = "drop"
  ) |>
    pivot_longer(
    cols = c(mean_irri, mean_mecha, mean_HYV),
    names_to = "variable",
    values_to = "proportion"
  ) |>
  mutate(
    variable = recode(variable,
                      `mean_irri` = "Irrigation",
                      `mean_mecha` = "Méchanisation",
                      `mean_HYV` = "HYV")
  )
```

```{r}
mean_outils_caste <- proportion_outils |>
  group_by(CASTE_GROUP, AREA_CROP) |>
  summarise(
    mean_mecha = mean(MACHINERY, na.rm = TRUE),
    mean_irri = mean(IRRIGATION, na.rm = TRUE),
    mean_HYV = mean(VAR_TYPE, na.rm = TRUE),
    .groups = "drop"
  )
```

```{r, message=FALSE, warning=FALSE}
# Toutes castes confondues
# Seulement riz en Kharif
mean_outils |>
  ggplot(aes(x = AREA_CROP, y = proportion, color = variable)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = TRUE, linewidth = 1.2) +
  coord_cartesian(ylim = c(0, 1), xlim = c(0, 1)) +
  labs(
    title = "Lien avec la superficie (toutes castes confondues)",
    x = "Superficie (en acre)",
    y = "Proportion de champs",
    color = "Variable"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
    )
```

#### Irrigation

```{r, message=FALSE, warning=FALSE}
# Par caste ; irrigation
mean_outils_caste |>
  ggplot(aes(x = AREA_CROP, y = mean_irri, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 1)) +
  labs(
    title = "Relation entre irrigation et superficie, selon la caste",
    x = "Superficie (en acre)",
    y = "Proportion de champs irrigués"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 10, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20")
    )
```

#### Méchanisation

```{r, message=FALSE, warning=FALSE}
# Par caste ; méchanisation
mean_outils_caste |>
  ggplot(aes(x = AREA_CROP, y = mean_mecha, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 1)) +
  labs(
    title = "Relation entre méchanisation et superficie, selon la caste",
    x = "Superficie (en acre)",
    y = "Proportion de champs utilisant des outils"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 10, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20")
    )
```

#### HYV

```{r, message=FALSE, warning=FALSE}
# Par caste ; HYV
mean_outils_caste |>
  ggplot(aes(x = AREA_CROP, y = mean_HYV, color = CASTE_GROUP)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  coord_cartesian(xlim = c(0, 1)) +
  labs(
    title = "Relation entre HYV et superficie, selon la caste",
    x = "Superficie (en acre)",
    y = "Proportion de champs utilisant des HYV"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 10, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20")
    )
```


********************************************************************************

## Productivité selon la caste

L'idée est de comprendre pourquoi la caste supérieure (FC) a un ratio Hr/acre total inférieur aux autres castes, que ce soit pour le travail des hommes et celui des femmes. 

### Production de riz par acre

On regarde la production de riz (en kg) par acre, en fonction de la caste. 

Il y a de nombreux n/a pour les variables sur la production (OP_MAIN_PROD_QTY et OP_MAIN_PROD_UNIT). 

Sur 1,007 ménages présents dans la base initiale Cultivation_2014, 831 n'ont pas d'information sur la production : 645 ménages parce qu'ils n'ont de correspondance entre les bases CultOutput_2014 et CultInput_2014 + 184 ménages parce que les variables ne sont pas complétées dans CultOutput_2014. 

```{r}
cultivation_paddy <- Cultivation_expand |>
  filter(CROP == "PADDY", SEASON == "KHARIF") |>
  group_by(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, SEASON, CROP, CASTE_GROUP, AREA_CROP) |>
  summarise(
    OP_MAIN_PROD_QTY = first(na.omit(OP_MAIN_PROD_QTY)),
    OP_MAIN_PROD_UNIT = first(na.omit(OP_MAIN_PROD_UNIT)),
    .groups = "drop"
  )
```

```{r}
na_prod_paddy <- nrow(cultivation_paddy |> filter(is.na(OP_MAIN_PROD_QTY)))
prop_na_prod_paddy <- round(na_prod_paddy / nrow(cultivation_paddy) * 100, 2)

cat(" - Champs de riz (en Kharif) dans Cultivation_expand :", nrow(cultivation_paddy), "\n")
cat(" - Champs sans information de production de riz :", na_prod_paddy, "\n")
cat(" - Proportion avec n/a :", prop_na_prod_paddy, "%\n")
```

```{r}
cultivation_paddy <- cultivation_paddy |>
  filter(!is.na(OP_MAIN_PROD_QTY), !is.na(CASTE_GROUP)) |>
  mutate(
    OP_MAIN_PROD_QTY = as.numeric(as.character(OP_MAIN_PROD_QTY)),
    prod_per_acre = OP_MAIN_PROD_QTY/AREA_CROP
    )

cultivation_paddy |>
  group_by(CASTE_GROUP) |>
  summarise(
    `Nombre de ménages` = n_distinct(VDS_ID),
    `Nombre de champs` = n_distinct(paste(VDS_ID, PLOT_CODE, SUB_PLOT_CODE, AREA_CROP, sep = "_")),
    .groups = "drop"
  ) |>
  arrange(desc(`Nombre de ménages`)) |>
  gt() |>
  tab_header(
    title = "Ménages et champs avec la production de riz par caste"
  ) |>
  cols_label(
    CASTE_GROUP = "Caste"
  )
```
```{r}
mean_prod_caste <- cultivation_paddy |>
  group_by(CASTE_GROUP) |>
  summarise(mean_prod = mean(prod_per_acre, na.rm = TRUE), .groups = "drop") |>
  mutate(CASTE_GROUP = fct_reorder(CASTE_GROUP, mean_prod, .fun = mean, .desc = TRUE))
```

```{r}
mean_prod_caste |>
  filter(!is.na(mean_prod)) |>
  ggplot(aes(x = CASTE_GROUP, y = mean_prod, fill = CASTE_GROUP)) +
  geom_col() +
  coord_flip() +
    labs(
    title = "Average rice production per acre, by caste",
    x = "",
    y = "Mean rice production (in kg) per acre per season",
    fill = "Caste"
  ) +
  scale_y_continuous(labels = scales::comma) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16),
    axis.text = element_text(size = 11, color = "gray20"),
    axis.title = element_text(size = 12, color = "gray20"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )
```
per hour (pour chaque heure travaillée) : divisé par le nombre total d'heures


### Irrigation

On regarde le pourcentage de champs irrigués dans la culture du riz (en Kharif) selon la caste.

*A GARDER ?*
Variable IRRIGATION
Cultivation_expand <- Cultivation_expand |>
  mutate(PER_IRRI = round(100 * IRRI_CROP / AREA_CROP, 2)) |>
  mutate(PER_IRRI = if_else(PER_IRRI>100, 100, PER_IRRI))

Cultivation_expand <- Cultivation_expand |>
  mutate(
    IRRIGATION = case_when(
      PER_IRRI>70 ~ "Irrigué",
      PER_IRRI<20 ~ "Non irrigué",
      TRUE ~ "Autre"
    )
  ) |>
  select(-PER_IRRI)


```{r}
Cultivation_expand |>
  filter(!is.na(IRRIGATION),
         !is.na(CASTE_GROUP),
         CROP == "PADDY",
         SEASON == "KHARIF") |>
  group_by(CASTE_GROUP, IRRIGATION) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(CASTE_GROUP, IRRIGATION, proportion) |>
  pivot_wider(
    names_from = IRRIGATION,
    values_from = proportion,
    values_fill = 0
  ) |>
  arrange(desc(Irrigué))
```

### Méchanisation

On regarde la part de méchanisation dans la culture du riz (en Kharif) selon la caste.

```{r}
Cultivation_expand |>
  filter(!is.na(MACHINERY),
         !is.na(CASTE_GROUP),
         CROP == "PADDY",
         SEASON == "KHARIF") |>
  group_by(CASTE_GROUP, MACHINERY) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(CASTE_GROUP, MACHINERY, proportion) |>
  pivot_wider(
    names_from = MACHINERY,
    values_from = proportion,
    values_fill = 0
  ) |>
  arrange(desc(Mécanisé))
```

### HYV

```{r}
Cultivation_expand <- Cultivation_expand |>
  mutate(
    VAR_TYPE = recode(VAR_TYPE,
                      `1` = "Local",
                      `2` = "High-yielding variety",
                      `3` = "Hybrid",
                      `4` = "BT",
                      `5` = "Others")
  )
```

```{r}
Cultivation_expand |>
  filter(!is.na(VAR_TYPE),
         !is.na(CASTE_GROUP),
         CROP == "PADDY",
         SEASON == "KHARIF") |>
  group_by(CASTE_GROUP, VAR_TYPE) |>
  summarise(nb = n(), .groups = "drop") |>
  group_by(CASTE_GROUP) |>
  mutate(
    total = sum(nb),
    proportion = round(100 * nb / total, 0)
  ) |>
  select(CASTE_GROUP, VAR_TYPE, proportion) |>
  pivot_wider(
    names_from = VAR_TYPE,
    values_from = proportion,
    values_fill = 0
  ) |>
  arrange(desc(`High-yielding variety`))
```


