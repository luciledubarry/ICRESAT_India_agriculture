---
title: "Fichier 2 : Nettoyer la base Cultivation 2014"
format: html
editor: source
---

```{r, message=FALSE, warning=FALSE}
rm(list = ls())
graphics.off()
cat("\014")
```

```{r}
#| message: false
here::i_am("INCRESAT_Micro_database.Rproj")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
library(viridisLite)
```


```{r}
Cultivation_2014 <- readRDS("Base de données générées/Cultivation_2014/Cultivation_2014.rds", refhook = NULL)
```

```{r}
Cultivation_2014 <- Cultivation_2014 |>
  mutate(SEASON = toupper(SEASON))
```

## Principales cultures

```{r}
# Tableau des principales cultures
main_crops <- Cultivation_2014 |>
  select(
    VDS_ID, PLOT_CODE, SEASON,
    starts_with("CROP_")
  ) |>
  distinct() |>
  pivot_longer(
    cols = c(CROP_1, CROP_2, CROP_3, CROP_4),
    names_to = "CROP_POSITION",
    values_to = "CROP"
  ) |>
  filter(!is.na(CROP) & CROP != "") |>
  count(CROP, name = "nb_occurrences") |>
  arrange(desc(nb_occurrences)) |>
  inner_join(
    Cultivation_2014 |>
      select(CROP = CROP_1, CROP_ID = CROP_1_ID), by = "CROP"
  ) |>
  distinct()
```

## Graph: Salaire horaire

```{r}
Cultivation_2014 |>
  filter(LAB_TYPE != "6", LAB_TYPE != "B", LAB_TYPE != "EB", LAB_TYPE != "HB", LAB_TYPE != "OB", LAB_TYPE != "FB") |>
  filter(WAGE_PER_HR < 400) |>
  ggplot(aes(x = LAB_TYPE, y = WAGE_PER_HR)) +
  geom_boxplot(fill = "palegreen") +
  theme_minimal() +
  labs(
    x = "",
    y = "Salaire en roupies",
    title = "Distribution du salaire horaire par type de main d'oeuvre"
  )
# Le filtre exclut 3 valeurs invraisemblables, au-dessous de 1000 roupies par heure. 
```
```{r}
Cultivation_2014 |>
  filter(LAB_TYPE != "6", LAB_TYPE != "B", LAB_TYPE != "RS") |>
  filter(WAGE_PER_HR < 400) |>
  mutate(Sous_Categorie = case_when(
    substr(LAB_TYPE, 2, 2) == "M" ~ "Men",
    substr(LAB_TYPE, 2, 2) == "F" ~ "Women",
    substr(LAB_TYPE, 2, 2) == "C" ~ "Children",
    substr(LAB_TYPE, 2, 2) == "B" ~ "Bullocks",
    TRUE ~ "Autre"
  )) |>
  group_by(Sous_Categorie) |>
  ggplot(aes(x = Sous_Categorie, y = WAGE_PER_HR)) +
  geom_boxplot(fill = "lightpink") +
  theme_minimal() +
  labs(
    x = "",
    y = "Salaire en roupies",
    title = "Distribution du salaire horaire par type de main d'oeuvre (regroupé)")
```

```{r}
Cultivation_2014 |>
  filter(LAB_TYPE != "6", LAB_TYPE != "B") |>
  group_by(LAB_TYPE) |>
  summarize(mean_wage_per_hr = mean(WAGE_PER_HR, na.rm = TRUE)) |>
  ggplot(aes(x = LAB_TYPE, y = mean_wage_per_hr)) +
  geom_col(fill = "lightskyblue") +
  theme_minimal() +
  labs(
    x = "",
    y = "Salaire en roupies",
    title = "Moyenne du salaire horaire par type de main d'oeuvre")
```

```{r}
# Filter pour le travail employé (hired)
Cultivation_2014 |>
  filter(LAB_TYPE %in% c("HF", "HM", "HC", "HB")) |>
  mutate(Sous_Categorie = case_when(
    substr(LAB_TYPE, 2, 2) == "M" ~ "Men",
    substr(LAB_TYPE, 2, 2) == "F" ~ "Women",
    substr(LAB_TYPE, 2, 2) == "C" ~ "Children",
    substr(LAB_TYPE, 2, 2) == "B" ~ "Bullocks",
    TRUE ~ "Autre"
  )) |>
  group_by(Sous_Categorie) |>
  summarize(mean_wage_per_hr = mean(WAGE_PER_HR, na.rm = TRUE)) |>
  ggplot(aes(x = Sous_Categorie, y = mean_wage_per_hr)) +
  geom_col(fill = "lightslateblue") +
  theme_minimal() +
  labs(
    x = "",
    y = "Salaire en roupies",
    title = "Moyenne du salaire horaire des travailleurs employés")
```

```{r}
tableau_valeurs <- Cultivation_2014 |>
  summarize(
    Supérieur_50 = sum(WAGE_PER_HR > 50, na.rm = TRUE),
    Supérieur_100 = sum(WAGE_PER_HR > 100, na.rm = TRUE),
    Supérieur_1000 = sum(WAGE_PER_HR > 1000, na.rm = TRUE)
  )

tableau_valeurs
```

## Pivoter Cultivation : mettre les CROP en ligne

```{r}
# Diviser PLOT_AREA pour chaque culture, selon les variables PRCT_AREA
Cultivation_cult_distinctes <- Cultivation_2014 |>
  mutate(
    AREA_CROP_1 = PLOT_AREA * PRCT_AREA_1 / 100,
    AREA_CROP_2 = if_else(!is.na(PRCT_AREA_2), PLOT_AREA * PRCT_AREA_2 / 100, NA_real_),
    AREA_CROP_3 = if_else(!is.na(PRCT_AREA_3), PLOT_AREA * PRCT_AREA_3 / 100, NA_real_),
    AREA_CROP_4 = if_else(!is.na(PRCT_AREA_4), PLOT_AREA * PRCT_AREA_4 / 100, NA_real_)
  )

# Diviser IRRI_AREA pour chaque culture, selon les variables PRCT_AREA
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(
    IRRI_CROP_1 = IRRI_AREA * PRCT_AREA_1 / 100,
    IRRI_CROP_2 = if_else(!is.na(PRCT_AREA_2), IRRI_AREA * PRCT_AREA_2 / 100, NA_real_),
    IRRI_CROP_3 = if_else(!is.na(PRCT_AREA_3), IRRI_AREA * PRCT_AREA_3 / 100, NA_real_),
    IRRI_CROP_4 = if_else(!is.na(PRCT_AREA_4), IRRI_AREA * PRCT_AREA_4 / 100, NA_real_)
  )
```

```{r Calculer le nombre d'heures de travail et la variable heure par hectare selon la proportion de chaque culture}
# Recalculer la variable WORK_HR selon les variables PRCT_CROP
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(
WORK_HR_1 = if_else(PRCT_AREA_1 == 0, NA_real_, WORK_HR * PRCT_AREA_1 / 100),
WORK_HR_2 = if_else(PRCT_AREA_2 == 0, NA_real_, WORK_HR * PRCT_AREA_2 / 100),
WORK_HR_3 = if_else(PRCT_AREA_3 == 0, NA_real_, WORK_HR * PRCT_AREA_3 / 100),
WORK_HR_4 = if_else(PRCT_AREA_4 == 0, NA_real_, WORK_HR * PRCT_AREA_4 / 100),
  )
```

```{r}
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  select(-WORK_HR, -WAGE_PER_HR, -WAGE, -IRRI_AREA, -PLOT_AREA, -OPER_ID)

Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  rename(CROP_ID_1 = CROP_1_ID) |>
  rename(CROP_ID_2 = CROP_2_ID) |>
  rename(CROP_ID_3 = CROP_3_ID) |>
  rename(CROP_ID_4 = CROP_4_ID)
```

```{r}
# Pivoter Cultivation en lignes pour les variables CROP, CROP_ID, PRCT_AREA, VAR_NAME, VAR_TYPE, AREA_CROP, HR_WORK, HR_PER_ACRE
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  pivot_longer(
    cols = matches("^(CROP|CROP_ID|PRCT_AREA|VAR_NAME|VAR_TYPE|AREA_CROP|IRRI_CROP|WORK_HR)_[1-4]$"),
    names_to = c(".value", "NB"),
    names_pattern = "(.*)_(\\d)"
  )
```

```{r}
# Supprimer les lignes qui n'ont pas de crop, soit PRCT_AREA == 0
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  filter(!PRCT_AREA == 0) |>
  select(-NB, -PRCT_AREA) |>
  relocate(AREA_CROP, .after = PLOT_CODE) |>
  relocate(IRRI_CROP, .after = AREA_CROP) |>
  relocate(WORK_HR, .before = HR_PER_ACRE) |>
  relocate(VAR_TYPE, .before = VAR_NAME)
```

## Nouvelles variables

### Recatégoriser Opération

```{r}
# Nouvelles catégories OPERATION
cat_operations <- tribble(
  ~OLD_OPERATION,        ~OPERATION,

  "HAND WEEDING",        "HAND WEEDING",
  "HARVESTING",          "HARVESTING & THRESHING",
  "THRESHING",           "HARVESTING & THRESHING",
  "HARVESTING/THRESHING","HARVESTING & THRESHING",
  "WINNOWING",           "HARVESTING & THRESHING",
  "INTERCULTURE",        "INTERCULTURE",
  "THINNING",            "INTERCULTURE",
  "PINCHING/CUTTING",    "INTERCULTURE",
  "MULCHING",            "INTERCULTURE",
  "FENCE TRIMMING",      "INTERCULTURE",
  "GIRDLING",            "INTERCULTURE",
  "IRRIGATION",          "IRRIGATION",
  "LAND PREPARATION",    "LAND PREPARATION",
  "BUNDING",             "LAND PREPARATION",
  "DIGGING",             "LAND PREPARATION",
  "LEVELING",            "LAND PREPARATION",
  "FIELD CLEANING",      "LAND PREPARATION",
  "MARKETING",           "MARKETING",
  "ABELING",             "MARKETING",
  "BY PRODUCT MAKING",   "MARKETING",
  "TRANSFORMATION",      "MARKETING",
  "GRADING/TAGGING",     "MARKETING",
  "SOWING",              "SEED SOWING",
  "DIPPING",             "SEED SOWING",
  "TRANSPLANTING",       "TRANSPLANTING",
  "UPROOTING",           "TRANSPLANTING",
  "PLANT PROTECTION",    "PLANT PROTECTION MEASURES",
  "PESTICIDE",           "PLANT PROTECTION MEASURES",
  "HERBICIDE",           "PLANT PROTECTION MEASURES",
  "FUMIGATION",          "PLANT PROTECTION MEASURES",
  "FERTILIZER",          "CHEMICAL FERTILIZER APPL.",
  "SUPERVISION",         "SUPERVISION",
  "TRANSPORT",           "TRANSPORT",
  "LOADING",             "TRANSPORT",
  "NURSERY RAISING",     "NURSERY RAISING",
  "POD COLLECTION",      "OTHERS",
  "CURING",              "OTHERS",
  "TRANSFORMATION",      "OTHERS",
  "BY PRODUCT MAKING",   "OTHERS"
)
```

```{r, warning=FALSE}
# Ajouter les nouvelles catégories d'OPERATION dans Cultivation_cult_distinctes
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  rename(OLD_OPERATION = OPERATION) |>
  left_join(cat_operations, by = "OLD_OPERATION") |>
  relocate(OPERATION, .before = FERTILIZER) |>
  select(-OLD_OPERATION)
```

### Variable Month

```{r}
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(MONTH = substr(SUR_MON_YR, 1, 2)) |>
  mutate(
    MONTH = recode(MONTH,
                      `01` = "janv",
                      `02` = "feb",
                      `03` = "march",
                      `04` = "april",
                      `05` = "may",
                      `06` = "june",
                      `07` = "july",
                      `08` = "aug",
                      `09` = "sept",
                      `10` = "oct",
                      `11` = "nov",
                      `12` = "dec")
  )
```

### Variable Gender

rajouter child / bullocks ? 

```{r}
# Créer la variable GENDER à partir de LAB_TYPE
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(
    GENDER = case_when(
      LAB_TYPE %in% c("HF", "FF", "EF") ~ "Female",
      LAB_TYPE %in% c("HM", "FM", "EM") ~ "Male",
      LAB_TYPE %in% c("HC", "FC", "EC") ~ "Child",
    )
  )
```

### Variable Employment

```{r}
# Créer la variable EMPLOYMENT à partir de LAB_TYPE
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(
    EMPLOYMENT = case_when(
      LAB_TYPE %in% c("HF", "HM", "HC") ~ "Hired",
      LAB_TYPE %in% c("FM", "FF", "FC") ~ "Family",
      LAB_TYPE %in% c("EM", "EF", "EC") ~ "Exchange",
      TRUE ~ "Other"
    )
  )
```

### Variable Fertilizer

```{r}
# Créer la variable FERTILIZER qui précise si l'opération a nécessité de l'engrais ou non
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(FERTILIZER = str_detect(OPERATION, "FERTILIZ|FERTIGATION")) |>
  relocate(FERTILIZER, .after = OPERATION)
```


### Cultures par saison

```{r}
# Modifier la saison dans le cas de cultures annuelles et sélectionner seulement les saisons Kharif et Rabi.
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(
    SEASON = if_else(CROP %in% c("MANGO", "KAZILIME", "POMOGRANATE", "SUGARCANE", "GUAVA"), "PERENNIAL", SEASON)
  ) |>
  filter(SEASON %in% c("KHARIF", "RABI"))
```

Etudier quelles cultures sont terminées en une saison.

1ère méthode : vérifier que toutes les opérations pour une même culture soient faites dans la même saison (de LAND PREPARATION jusqu'à HARVESTING / THRESHING).

2ème méthode: comparer entre les deux saisons quelles sont les cultures mises en place pour un même champ, incluant SEASONAL FALLOW.

```{r 1ère méthode}
verif_operations <- Cultivation_cult_distinctes |>
  filter(CROP != "SEASONAL FALLLOW") |>
  filter(OPERATION %in% c("HARVESTING", "LAND PREPARATION")) |>
  distinct(VDS_ID, PLOT_CODE, CROP, SEASON, OPERATION) |>
  group_by(VDS_ID, PLOT_CODE, CROP, SEASON) |>
  summarise(n_ops = n_distinct(OPERATION), .groups = "drop") |>
  filter(n_ops > 1)
```
Liste des cultures ayant uniquement une des deux opérations (HARVESTING ou LAND PREPARATION) par saison : JUTE, PILLI PESARA, KOLLA GANJERU, GUVAR GUM, PAPAYA, GAJARJ GRASS, BERSEEM, RABDA

En plus des cultures Perennial/Annual: GRAPE, SUBABUL, BER, POMOGRANATE, LEMON, JASMINE, BANANA, CITRUS, SAPOTA, ARECANUT, GUAVA, MANGO, CUSTARD APPLE, COCONUT, KAZILIME, TURMURIC, SWEET ORANGE, LUCERN GRASS, NAPIER GRASS

```{r 2ème méthode: avec Cultivation_2014}
cultures_per_season <- Cultivation_2014 |>
  filter(SEASON %in% c("KHARIF", "RABI")) |>
  select(VDS_ID, PLOT_CODE, SEASON, CROP_1, CROP_2, CROP_3, CROP_4) |>
  distinct() |>
  group_by(VDS_ID, PLOT_CODE, SEASON) |>
  slice(1) |>  # Garde une seule ligne par champ et saison
  ungroup() |>
  pivot_wider(
    names_from = SEASON,
    values_from = c(CROP_1, CROP_2, CROP_3, CROP_4),
    names_sep = "_"
  ) |>
  mutate(
    diff_crop_1 = CROP_1_KHARIF != CROP_1_RABI,
    diff_crop_2 = CROP_2_KHARIF != CROP_2_RABI,
    diff_crop_3 = CROP_3_KHARIF != CROP_3_RABI,
    diff_crop_4 = CROP_4_KHARIF != CROP_4_RABI,
    has_diff_crop = diff_crop_1 | diff_crop_2 | diff_crop_3 | diff_crop_4
  ) |>
  filter(has_diff_crop) |>
  select(VDS_ID, PLOT_CODE, starts_with("CROP"), has_diff_crop)
```

```{r}
cultures_per_season <- cultures_per_season |>
  select(starts_with("CROP_")) |>
  pivot_longer(cols = everything(), values_to = "CROP") |>
  filter(!is.na(CROP) & CROP != "") |>
  distinct(CROP) |>
  arrange(CROP)
```

Liste des cultures cultivée sur les deux saisons par année (liste faite avec Cultivation_2014) : JUTE, SUNFLOWER, SAFFFLOWER, TOBACCAO, VARIGA, MOONG, BANANA, DRUMSTICK, CASTOR, KAZILIME, GUVAR GUM, MARUA, SWEET POTATO, KOLLA GANJERU, GARLIC, BEANS, GAJRAJ GRASS, PILLI PESARA, MATKI, SARGUJA, CUCUMBER, TEAK, BERSEEM, GUAVA, RABDA

#### Sélectionner les cultures saisonnières

Je sélectionne les cultures qui ont deux récoltes par an, donc deux saisons (Rabi et Kharif), dans le but d'analyser les heures de travail effectués dans chaque culture sur une saison donnée. 

seasonal_crops <- Cultivation_cult_distinctes |>
  distinct(CROP, SEASON) |>
  group_by(CROP) |>
  summarise(nb_saisons = n_distinct(SEASON), .groups = "drop") |>
  filter(nb_saisons > 1)

Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  mutate(SEASONAL = CROP %in% seasonal_crops$CROP) |>
  filter(SEASONAL)

FAUX: Cette méthode n'indique pas les cultures saisonnières, mais les cultures avec deux moissons, qui seront donc présentes dans les deux saisons. 

```{r}
seasonal_cultures <- union(verif_operations$CROP, cultures_per_season$CROP)

Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  filter(CROP != "SEASONAL FALLOW") |>
  mutate(SEASONAL = CROP %in% seasonal_cultures) |>
  filter(SEASONAL) |>
  select(-SEASONAL)
```

```{r}
# J'enlève la culture GREEN FODDER puisque cela réfère à plusieurs plantes (sorghum, maize, oats). Certaines de ces plantes sont sur une saison, d'autres sur une année, donc je peux pas catégoriser GREEN FODDER. 
Cultivation_cult_distinctes <- Cultivation_cult_distinctes |>
  filter(CROP != "GREEN FODDER")
```

#### Graph: Nombre de champs par culture et par saison

Combien de champs y a-t-il par culture et par saison ? 

```{r}
cultures_per_season <- Cultivation_cult_distinctes |>
  distinct(VDS_ID, PLOT_CODE, SEASON, CROP) |>
  group_by(SEASON, CROP) |>
  summarise(NB_PLOTS = n(),
            .groups = "drop")
```

```{r}
cultures_per_season |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = CROP, y = NB_PLOTS, fill = SEASON)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  labs(
    title = "Nombre de champs par culture selon la saison",
    x = "",
    y = "",
    fill = ""
  ) +
  coord_flip() +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 9)
  )
```

## Verifs

### Enquêtes par ménage

On vérifie comment a été remplie la variable OPERATION, variable mensuelle.
Est-ce qu'il y a exactement 12 enquêtes (SUR_MON_YR) faites par ménage (identifié par VDS_ID) en 2014 ? 

```{r}
test_nb_survey <- Cultivation_cult_distinctes |>
  distinct(VDS_ID, SUR_MON_YR) |> 
  count(VDS_ID, name = "nb_survey")
```

```{r}
test_nb_survey |>
  ggplot(aes(x = nb_survey)) +
  geom_bar(fill = "seagreen3", width = 0.7) +
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.4) +
  scale_x_continuous(
    breaks = seq(0, 12, by = 1) 
  ) +
  labs(
    title = "Nombre d'enquêtes faites par ménage",
    x = ""
  ) +
  theme_minimal()
```

### Enquêtes par mois

On vérifie sur quels mois ont été faites les enquêtes à partir de la variable MONTH.

Le graphique suiavnt montre le nombre d'enquêtes par mois en considèrant les ménages distincts (soit une enquête maximum par ménage et par mois).

```{r}
month_levels <- c("janv", "feb", "march", "april", "may", "june", 
                  "july", "aug", "sept", "oct", "nov", "dec")

test_nb_survey <- Cultivation_cult_distinctes |>
  group_by(MONTH) |> 
  count(VDS_ID, name = "nb_survey") |>
  mutate(MONTH = factor(MONTH, levels = month_levels, ordered = TRUE))
```

```{r}
test_nb_survey |>
  ggplot(aes(x = nb_survey, y = MONTH)) +
  geom_col(fill = "darkgreen", width = 0.7) +
  coord_flip() +
  scale_x_continuous(
    breaks = seq(0, 12, by = 1) 
  ) +
  labs(
    title = "Nombre d'enquêtes faites par mois (ménages distincts)",
    x = "",
    y = ""
  ) +
  theme_minimal()
```
On constate que les enquêtes faites auprès des ménages sont plus nombreuses lors des mois avec le plus de travail (juillet, août), au contraire des mois creux (mai, juin). Cela justifie l'hypothèse que les opérations ne sont pas indiquées comme vide lorsqu'aucun travail n'est fait. 

### Distinguer heures de travail des humains et des boeufs

On vérifie si les heures de travail (et le salaire) indiqué pour les boeufs (bullocks) incluent le travail humain  qui a nécessité pour conduire le boeuf. 

L'hypothèse est que les heures de travail faites par le conducteur ne sont pas comprises dans les heures de travail des beoufs et sont écrites sur une deuxième ligne. Pour vérifier cela, on compare si, pour une même opération dans un même champ (pour une date précise) les heures de travail par acre (h/acre) cumulé des humains sont supérieures aux h/acre des boeufs. 

```{r}
bullocks_work <- Cultivation_cult_distinctes |>
  group_by(VDS_ID, PLOT_CODE, SEASON, SUR_MON_YR, AREA_CROP, CROP, OPERATION, DT_OPER) |>
  mutate(
    total_human = sum(WORK_HR[LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")], na.rm = TRUE),
    total_bullocks = sum(WORK_HR[LAB_TYPE %in% c("HB", "OB", "EB")], na.rm = TRUE),
    .groups = "drop"
  ) 

nb_total_bullocks <- bullocks_work |>
  filter(LAB_TYPE %in% c("HB", "OB", "EB")) |>
  distinct(VDS_ID, PLOT_CODE, SEASON, SUR_MON_YR, AREA_CROP, CROP, OPERATION, DT_OPER) |>
  nrow() 

nb_bullocks_domine <- bullocks_work |> filter(total_bullocks > total_human) |> nrow()

tibble(
  `Total champs/opérations distincts` = nrow(bullocks_work |> distinct(VDS_ID, PLOT_CODE, SEASON, SUR_MON_YR, AREA_CROP, CROP, OPERATION, DT_OPER)),
  `Opérations incluant des boeufs` = nb_total_bullocks,
  `Boeufs > humain` = nb_bullocks_domine,
  `Proportion (%)` = round(100 * nb_bullocks_domine / nb_total_bullocks, 1)
)
```

## Créer les données pour les opérations non complétées

```{r}
full_operation <- expand_grid(
  VDS_ID = unique(Cultivation_cult_distinctes$VDS_ID),
  MONTH = unique(Cultivation_cult_distinctes$MONTH),
  OPERATION = unique(Cultivation_cult_distinctes$OPERATION)
)
```



```{r}
# Tableau des doublons
dup_rows_Cultivation <- Cultivation_cult_distinctes |>
  group_by(VDS_ID, MONTH, OPERATION) |>
  filter(n() > 1) |>
  ungroup()
```


```{r}
Cultivation_expand <- full_operation |>
  left_join(Cultivation_cult_distinctes, by = c("VDS_ID", "MONTH", "OPERATION")) |>
  mutate(WORK_HR = replace_na(WORK_HR, 0))
```


## Heures par acre

### Graphiques h/acre pour les principales cultures

Le nombre d'h/acre est notre information principale pour estimer le temps de travail que nécessite chaque culture. 

```{r}
# Sélectionner avec la base Cultivation_top_25 seulement les 25 cultures les plus répandues (nombre de champs distincts avec ces cultures)
top_25_crops <- Cultivation_cult_distinctes |>
  distinct(VDS_ID, PLOT_CODE, SEASON, CROP) |> 
  count(CROP, name = "nb_occurrences") |>
  arrange(desc(nb_occurrences)) |>
  slice_head(n = 25)

Cultivation_top_25 <- Cultivation_cult_distinctes |>
  semi_join(top_25_crops, by = "CROP") 
```

```{r}
# Moyenne h/acre pour toutes les cultures saisonnières (tout type de main d'oeuvre confondu)
hr_per_acre <- Cultivation_top_25 |>
  group_by(CROP) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE)) |>
  arrange(desc(MEAN_HR_PER_ACRE))

hr_per_acre <- hr_per_acre |>
  inner_join(top_25_crops, by = "CROP")
```
Ce graphique prend en compte tout type de main d'oeuvre (humain et boeufs) et tout type d'emploi (family, hired ou exchange). 

```{r}
hr_per_acre |>
  ggplot(aes(x = reorder(CROP, MEAN_HR_PER_ACRE), y = MEAN_HR_PER_ACRE)) +
  geom_col(fill = "slateblue3", width = 0.7) +
  coord_flip() +
  labs(
    title = "Top 25: Moyenne d'heures de travail par acre (toute main d'oeuvre confondue)",
    x = "",
    y = ""
  ) +
  scale_y_continuous(labels = comma) +
  theme_minimal()
```

```{r}
# Moyenne h/acre pour toutes les cultures saisonnières (seulement travail humain)
hr_per_acre <- Cultivation_top_25 |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  group_by(CROP) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE)) |>
  arrange(desc(MEAN_HR_PER_ACRE))

hr_per_acre <- hr_per_acre |>
  inner_join(top_25_crops, by = "CROP")
```
Ce graphique ne prend en compte que le travail humain (family, hired ou exchange) et exclut les heures de travail relatives aux bullocks. 

```{r}
hr_per_acre |>
  arrange(desc(nb_occurrences)) |>
  slice_head(n = 25) |>
  ggplot(aes(x = reorder(CROP, MEAN_HR_PER_ACRE), y = MEAN_HR_PER_ACRE)) +
  geom_col(fill = "mediumpurple1", width = 0.7) +
  coord_flip() +
  labs(
    title = "Top 25: Moyenne d'heures de travail par acre (seulement travail humain)",
    x = "",
    y = ""
  ) +
  scale_y_continuous(labels = comma) +
  theme_minimal()
```

### Verif: Distribution de h/acre par culture

Les paragraphes suivants sont des vérifications par rapport à cette valeur.

D'abord, on vérifie le nombre de champs différents pour chaque culture, avec la base main_crops. Dans le top 25, la culture la moins répandue est CLUSTER BEAN avec 10 champs différents. 

Puis, on regarde la distribution des h/acre pour chaque culture. 

```{r}
# Boxplot pour PADDY de h/acre -> histogramme ? 
Cultivation_top_25 |>
  filter(CROP == "PADDY") |>
  ggplot(aes(y = CROP, x = HR_PER_ACRE)) +
  geom_boxplot(fill = "slategray2") +
  xlim(0, 250) +
  theme_minimal() +
  labs(
    x = "",
    y = "",
    title = "PADDY: Distribution de h/acre"
  )
```

```{r}
# Boxplot pour chaque culture de h/acre
Cultivation_top_25 |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(y = reorder(CROP, HR_PER_ACRE, FUN = median, na.rm = TRUE),
             x = HR_PER_ACRE)) +
  geom_boxplot(fill = "thistle") +
  xlim(0, 250) +
  theme_minimal() +
  labs(
    x = "",
    y = "",
    title = "Top 10: Distribution de h/acre"
  )
```

### Verif: Graphique h/acre sans multicroping

Dans le cas de multi-croping (plusieurs crops sur un même champ), on a estimé que la productivité du travail (ratio haures de travail par acre) est équivalente. 

Pour vérifier le graphique, et enlever les changements dus à cette hypothèse, je ne prends en compte pour le graphique suivant uniquement les champs avec une culture. 

```{r}
# Créer une variable MULTI_CROPING pour identifier les champs ayant plusieurs cultures
Cultivation_top_25 <- Cultivation_top_25 |>
  group_by(VDS_ID, PLOT_CODE, SEASON, DT_OPER, OPERATION, LAB_TYPE, SUR_MON_YR, HR_PER_ACRE) |>
  mutate(MULTI_CROPING = n() > 1) |>
  ungroup()
```

```{r}
nb_multi_croping <- Cultivation_top_25 |>
  group_by(across(everything())) |>
  filter(MULTI_CROPING) |>
  summarise(nb_multi_croping = n(), .groups = "drop")

nb_champ <- Cultivation_top_25 |>
  group_by(across(everything())) |>
  summarise(nb_champ = n(), .groups = "drop")

cat("Nombre de lignes incluant le multi-croping :", nrow(nb_multi_croping), "\n")
cat("Sur un total de", nrow(nb_champ), "lignes soit", round(100 * nrow(nb_multi_croping) / nrow(nb_champ), 1), "%\n")
```

```{r}
# Refaire la moyenne de h/acre en enlevant les champs qui ont plusieurs cultures
hr_per_acre <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  group_by(CROP) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE)) |>
  arrange(desc(MEAN_HR_PER_ACRE))

hr_per_acre <- hr_per_acre |>
  inner_join(top_25_crops, by = "CROP")
```

```{r}
hr_per_acre |>
  ggplot(aes(x = reorder(CROP, MEAN_HR_PER_ACRE), y = MEAN_HR_PER_ACRE)) +
  geom_col(fill = "seagreen3", width = 0.7) +
  coord_flip() +
  labs(
    title = "Top 25: Moyenne de h/acre (sans multi-croping)",
    x = "",
    y = ""
  ) +
  scale_y_continuous(labels = comma) +
  theme_minimal()
```
## Décomposition des heures de travail par opération

On calcule le total d'heures de travail réalisées pour les principales cultures et décompose ce total par les nombre d'heures réalisées chaque opération. 

Les graphiques suivants se basent donc sur le total d'heures de travail (WORK_HR) et non sur la productivité par acre (HR_PER_ACRE).
Je considère seulement les champs qui ont une seule culture et le travail humain. 

```{r, message=FALSE, warning=FALSE}
hr_per_oper <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  group_by(CROP, OPERATION) |>
  summarise(HR_PER_OPER = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>
  group_by(CROP) |>
  mutate(HR_PER_CROP = sum(HR_PER_OPER, na.rm = TRUE)) |>
  ungroup() |>
  arrange(desc(HR_PER_CROP))

hr_per_oper <- hr_per_oper |>
  group_by(CROP, OPERATION) |>
  mutate(proportion = round(100 * HR_PER_OPER/HR_PER_CROP, 1)) |>
  arrange(CROP, desc(proportion))
```

### Paddy- Répartition du temps de travail par opération (en %)

```{r}
hr_per_oper |>
  filter(CROP == "PADDY") |>
  filter(proportion != 0.0) |>
  ggplot(aes(x = reorder(OPERATION, proportion), y = proportion)) +
  geom_bar(stat = "identity", position = "dodge", fill = "yellowgreen", width = 0.7) +
  geom_text(aes(label = paste0(proportion, "%")), 
          hjust = -0.1, size = 3.5) +
  coord_flip() +
  labs(
    title = "Paddy- Répartition du temps de travail par opération (en %)",
    x = "",
    y = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 5)
  )
```
### Top 10- Répartition du temps de travail par opération (en %)

```{r}
hr_per_oper |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE")) |>
  filter(proportion > 1) |>
  ggplot(aes(x = CROP, y = HR_PER_OPER, fill = reorder(OPERATION, proportion))) +
  geom_bar(stat = "identity", position = "fill", width = 0.6, color = "white", linewidth = 0.3) +
  geom_text(aes(label = paste0(round(proportion, 0), "%")),
            position = position_fill(vjust = 0.5),
            size = 3) +
  scale_y_continuous(labels = scales::percent) +
  labs(
    title = "Répartition du temps de travail par opération (en %)",
    x = "",
    y = "",
    fill = "Opération"
  ) +
  theme_minimal() 
```
```{r, message = False}
# Créer sa propre palette de couleurs
couleurs1 <- viridis(15, option = "C")[2:15]
```

```{r}
hr_per_oper |>
  filter(proportion > 1) |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  filter(proportion > 1) |>
  ggplot(aes(x = CROP, y = HR_PER_OPER, fill = reorder(OPERATION, proportion))) +
  geom_bar(stat = "identity", position = "fill", width = 0.8, color = "white", linewidth = 0.3) +
  scale_y_continuous(labels = scales::percent) +
  labs(
    title = "Top 10: Répartition du temps de travail par opération (en %)",
    x = "",
    y = "",
    fill = ""
  ) +
  scale_fill_manual(values = couleurs1) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    legend.text = element_text(size = 8)
  )
```

### Total d'heures pour les principales opérations 

Répartition du temps de travail par opération en valeur absolue

On compare pour les opérations les plus importantes le nombre d'heures de travail par saison et par culture. 

```{r}
# Refaire la table hr_per_acre en incluant SEASON pour calculer le temps de travail sur une seule saison (Rabi ou Kharif)
hr_per_oper_and_season <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  group_by(CROP, OPERATION, SEASON) |>
  summarise(HR_PER_OPER = sum(WORK_HR, na.rm = TRUE), .groups = "drop") |>
  group_by(CROP, SEASON) |>
  mutate(HR_PER_CROP = sum(HR_PER_OPER, na.rm = TRUE)) |>
  ungroup() |>
  arrange(desc(HR_PER_CROP))
```

```{r Toutes opérations confondues}
hr_per_oper_and_season |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = reorder(CROP, HR_PER_CROP), y = HR_PER_CROP, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Heures de travail totales par culture et par saison (toutes opérations confondues",
    x = "",
    y = "",
    fill = "Saison"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

```{r Harvesting & Threshing}
hr_per_oper_and_season |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = reorder(CROP, HR_PER_CROP), y = HR_PER_OPER, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Heures totales pour Harvesting/Threshing par culture et par saison",
    x = "",
    y = "",
    fill = "Saison"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

```{r Transplanting}
hr_per_oper_and_season |>
  filter(OPERATION == "TRANSPLANTING") |>
  filter(CROP %in% c("PADDY", "MAIZE", "COTTON", "ONION")) |>
  ggplot(aes(x = reorder(CROP, HR_PER_CROP), y = HR_PER_OPER, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Heures totales pour Transplanting par culture et par saison",
    x = "",
    y = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

```{r Hand Weeding}
hr_per_oper_and_season |>
  filter(OPERATION == "HAND WEEDING") |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = reorder(CROP, HR_PER_CROP), y = HR_PER_OPER, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Heures totales pour Hand Weeding par culture et par saison",
    x = "",
    y = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

```{r Land preparation}
hr_per_oper_and_season |>
  filter(OPERATION == "LAND PREPARATION") |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = reorder(CROP, HR_PER_CROP), y = HR_PER_OPER, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Heures totales pour Land preparation par culture et par saison",
    x = "",
    y = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```


### H/acre pour les principales opérations

Je refais ces graphs avec h/acre plutot que total d'heures.

```{r}
# Filtre des groupes (CROP, SEASON, OPERATION) qui ont plus de 100 observations
valid_groups <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(SEASON == "KHARIF" | SEASON == "RABI") |>
  group_by(CROP, SEASON, OPERATION) |>
  filter(n() > 100) |>
  ungroup() |>
  distinct(CROP, SEASON, OPERATION)
```

```{r}
# Refaire la table hr_per_oper_per_season en incluant HR_PER_ACRE pour calculer h/acre sur une seule saison (Rabi ou Kharif) et par opération
hr_per_oper_and_season <- Cultivation_top_25 |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  filter(!MULTI_CROPING) |>
  semi_join(valid_groups, by = c("CROP", "SEASON", "OPERATION")) |>
  group_by(CROP, OPERATION, SEASON) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE), .groups = "drop") |>
  mutate(CROP = reorder(CROP, MEAN_HR_PER_ACRE))
```

```{r Harvesting & Threshing}
hr_per_oper_and_season |>
  filter(OPERATION == "HARVESTING & THRESHING") |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = CROP, y = MEAN_HR_PER_ACRE, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Moyenne de h/acre pour Harvesting/Threshing par culture et par saison",
    x = "",
    y = "",
    fill = "Saison"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

```{r Hand Weeding}
hr_per_oper_and_season |>
  filter(OPERATION == "HAND WEEDING") |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = CROP, y = MEAN_HR_PER_ACRE, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Moyenne de h/acre pour Hand Weeding par culture et par saison",
    x = "",
    y = "",
    fill = "Saison"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

```{r Land preparation}
hr_per_oper_and_season |>
  filter(OPERATION == "LAND PREPARATION") |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = CROP, y = MEAN_HR_PER_ACRE, fill = SEASON)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Moyenne de h/acre pour Land Preparation par culture et par saison",
    x = "",
    y = "",
    fill = "Saison"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

## Comprendre les différences dans h/acre

Je souhaite comprendre les différences en temps de travail par acre observées selon le type de culture. 

Pour cela, je compare les cultures les moins productives et les productives productives par rapport à d'autres variables : répartition du temps de travail par opération (OPERATion), total de travail total (WORK_HR), taille moyenne des champs (PLOT_AREA).

### Comparer la répartition du temps de travail par opération

```{r, message = False}
# Créer sa propre palette de couleurs
couleurs2 <- viridis(12, option = "F")
```

```{r}
CROPS_ORDER <- c("PEAS", "POTATO", "EGYPTIAN CLOVER", "SESAMUM", "PIGEONPEA",  "SOYBEAN")

hr_per_oper |>
  filter(proportion > 1) |>
  filter(CROP %in% CROPS_ORDER) |>
  ggplot(aes(x = factor(CROP, levels = CROPS_ORDER), y = HR_PER_OPER, fill = reorder(OPERATION, proportion))) +
  geom_bar(stat = "identity", position = "fill", width = 0.8, color = "white", linewidth = 0.3) +
  geom_vline(xintercept = 3.5, linetype = "dashed", color = "gray20") +
  scale_y_continuous(labels = scales::percent) +
  scale_x_discrete(limits = CROPS_ORDER) +
  labs(
    title = "Comparaison: Répartition du temps de travail par opération (en %)",
    x = "",
    y = "",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    legend.text = element_text(size = 8) 
    ) +
  annotate("text", x = 2, y = 1.06, label = "Moins productives", hjust = 0.5, size = 3.5, fontface = "bold") +
  annotate("text", x = 5, y = 1.06, label = "Plus productives", hjust = 0.5, size = 3.5, fontface = "bold") 
```

```{r}
# Comparer la part de chaque opération pour les cultures les plus et les moins productives
hr_per_oper |>
  filter(CROP %in% CROPS_ORDER, proportion > 1) |>
  mutate(PRODUCTIVITY_GROUP = case_when(
    CROP %in% c("PEAS", "POTATO", "EGYPTIAN CLOVER") ~ "Moins productives",
    CROP %in% c("SESAMUM", "PIGEONPEA", "SOYBEAN") ~ "Plus productives"
  )) |>
  group_by(PRODUCTIVITY_GROUP, OPERATION) |>
  summarise(mean_prop = mean(proportion, na.rm = TRUE), .groups = "drop") |>
  mutate(mean_prop = round(mean_prop, 0)) |>
  pivot_wider(names_from = PRODUCTIVITY_GROUP, values_from = mean_prop)
```

### Comparer la taille moyenne des champs

Réfléchir si faire cette partie est pertinente

## Méchanisation

On regarde à partir de la variable MACHINERY quel est le part de méchanisation pour chaque opération. 

```{r Toutes cultures confondues}
Cultivation_top_25 |>
  group_by(OPERATION, MACHINERY) |>
  summarise(nb = n(), .groups = "drop") |>
  ggplot(aes(x = reorder(OPERATION, nb), y = nb, fill = MACHINERY)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(
      title = "Opérations méchanisées / non méchanisées",
    x = "",
    y = "Nombre d'opérations",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

## Irrigation

### Calculer un % d'irrigation

Dans la base Cultivation_top_25 avec les principales cultures, je calcule un % de terres irriguées par champ, pour savoir dans quelle proportion les champs sont irrigués. 

```{r}
Cultivation_top_25 <- Cultivation_top_25 |>
  mutate(PER_IRRI = round(100 * IRRI_CROP / AREA_CROP, 2)) |>
  mutate(PER_IRRI = if_else(PER_IRRI>100, 100, PER_IRRI))

tibble(
  `Irrigation = 100%` = nrow(Cultivation_top_25 |> filter(PER_IRRI == 100)),
  `Irrigation < 100%` = nrow(Cultivation_top_25 |> filter(PER_IRRI != 0) |> filter(PER_IRRI < 100)),
  `Irrigation = 0%` = nrow(Cultivation_top_25 |> filter(PER_IRRI == 0))
)
```

Compter le nombre de champs avce irrigation "OTHER"

### Créer une variable binaire IRRIGATION

```{r}
Cultivation_top_25 <- Cultivation_top_25 |>
  mutate(
    IRRIGATION = case_when(
      PER_IRRI>70 ~ "Irrigué",
      PER_IRRI<20 ~ "Non irrigué",
      TRUE ~ "Autre"
    )
  )

distinct_plots <- Cultivation_top_25 |> distinct(VDS_ID, PLOT_CODE, .keep_all = TRUE)

cat("Nombre de champs irrigués :", nrow(distinct_plots |> filter(IRRIGATION == "Irrigué")), "\n")
cat("Sur un total de", nrow(distinct_plots), "champs soit", round(100 * nrow(distinct_plots |> filter(IRRIGATION == "Irrigué")) / nrow(distinct_plots), 1), "%\n")
cat("Nombre de champs entre 20% et 70% d'irrigation :", nrow(distinct_plots |> filter(IRRIGATION == "Autre")), "\n")
```

### Irrigation par culture

On regarde quelles cultures sont irriguées et s'il y a des cultures avec à la fois des champs irrigués et non-irrigués. 

```{r}
Cultivation_top_25 |>
  distinct(VDS_ID, PLOT_CODE, .keep_all = TRUE) |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  filter(!is.na(IRRIGATION)) |>
  group_by(CROP, IRRIGATION) |>
  summarise(nb_plots = n(), .groups = "drop") |>
  ggplot(aes(x = CROP, y = nb_plots, fill = IRRIGATION)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  geom_text(
    aes(label = nb_plots),
    position = position_dodge(width = 0.7),
    hjust = -0.2,
    size = 3
  ) +
  coord_flip() +
  labs(
    title = "Nombre de champs irrigués / non irrigués par culture",
    x = "",
    y = "Nombre de champs",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

### H/acre selon l'irrigation et par culture

Je calcule la moyenne de h/acre selon la culture et l'irrigation, en conservant les groupes (CROP / IRRIGATION) avec plus de 10 champs distincts.

```{r}
# Filtre les groupes (CROP, IRRIGATION) qui ont plus de 10 champs distincts
valid_groups <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(IRRIGATION == "Irrigué" | IRRIGATION == "Non irrigué") |>
  distinct(VDS_ID, PLOT_CODE, .keep_all = TRUE) |>
  group_by(CROP, IRRIGATION) |>
  filter(n() > 10) |>
  ungroup() |>
  distinct(CROP, IRRIGATION)

# Moyenne de h/acre entre champs irrigués / non irrigués par culture
hr_per_acre_irri <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(IRRIGATION == "Irrigué" | IRRIGATION == "Non irrigué") |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  semi_join(valid_groups, by = c("CROP", "IRRIGATION")) |>
  group_by(CROP, IRRIGATION) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE)) |>
  arrange(desc(MEAN_HR_PER_ACRE))
```

```{r}
hr_per_acre_irri |>
    filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "COTTON", "SOYBEAN", "SORGHUM", "CHICKPEA", "BLACK GRAM", "GROUNDNUT", "ONION")) |>
  ggplot(aes(x = CROP, y = MEAN_HR_PER_ACRE, fill = IRRIGATION)) +
  geom_col(position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Moyenne de h/acre entre champs irrigués / non irrigués par culture",
    x = "",
    y = "Heures par acre",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("Irrigué" = "steelblue2", "Non irrigué" = "indianred2")
  ) +
  scale_y_continuous(labels = comma) +
  theme_minimal()
```

### Paddy

On cherche à comprendre pourquoi pour le riz, le nombre d'heures par acre moyen est 2 fois plus élevé pour les champs irrigués que ceux non irrigués. 

#### H/acre par opération

Pour répondre à cette question, on décompose les heures par acre en fonction de l'irrigation et des opérations. 

```{r}
# Refaire la table hr_per_acre_irri en incluant IRRIGATION pour calculer le temps de travail selon l'irrigation. 
hr_per_acre_irri <- Cultivation_top_25 |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  filter(IRRIGATION == "Irrigué" | IRRIGATION == "Non irrigué") |>
  filter(!MULTI_CROPING) |>
  group_by(CROP, OPERATION, IRRIGATION) |>
  filter(n() > 50) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE), .groups = "drop")

# Joindre avec la base hr_per_oper pour récupérer la variable proportion et indique les opérations en fonction de leur importance
hr_per_acre_irri <- hr_per_acre_irri |>
  left_join(hr_per_oper, by = c("CROP", "OPERATION")) |>
  mutate(CROP = reorder(CROP, MEAN_HR_PER_ACRE))
```

Je sélectionne les groupes (CROP / OPERATION / IRRIGATION) avec plus de 50 observations. Pour le graphique suivant, les opérations ssont présentées en fonctionde leur importance pour le riz (peu importe l'irrigation)

```{r Paddy}
hr_per_acre_irri |>
  filter(CROP == "PADDY") |>
  ggplot(aes(x = reorder(OPERATION, proportion), y = MEAN_HR_PER_ACRE, fill = IRRIGATION)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Paddy- H/acre par opération selon l'irrigation",
    x = "",
    y = "",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("Irrigué" = "steelblue2", "Non irrigué" = "indianred2")
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

#### Total d'heures par opération selon l'irrigation

Pas très pertinent je pense, puisque ça dépend du nombre de champs irrigués / non irrigués

```{r}
# Refaire la table hr_per_acre_irri en incluant IRRIGATION pour calculer le temps de travail selon l'irrigation. 
hr_per_acre_irri <- Cultivation_top_25 |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  filter(IRRIGATION == "Irrigué" | IRRIGATION == "Non irrigué") |>
  filter(!MULTI_CROPING) |>
  group_by(CROP, OPERATION, IRRIGATION) |>
  filter(n() > 50) |>
  summarise(TOTAL_HR = sum(WORK_HR, na.rm = TRUE), .groups = "drop")
```

```{r Paddy}
hr_per_acre_irri |>
  filter(CROP == "PADDY") |>
  ggplot(aes(x = reorder(OPERATION, TOTAL_HR), y = TOTAL_HR, fill = IRRIGATION)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  coord_flip() +
  labs(
    title = "Paddy- Heures réalisées par opération selon l'irrigation",
    x = "",
    y = "",
    fill = ""
  ) +
  scale_fill_manual(
    values = c("Irrigué" = "steelblue2", "Non irrigué" = "indianred2")
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```


## HYV

```{r}
Cultivation_top_25 <- Cultivation_top_25 |>
  mutate(
    VAR_TYPE = recode(VAR_TYPE,
                      `1` = "Local",
                      `2` = "HYV",
                      `3` = "Hybrid",
                      `4` = "BT",
                      `5` = "Others")
  )
```

```{r}
cat("Nombre de NA de VAR_TYPE :", nrow(Cultivation_top_25 |> filter(is.na(VAR_TYPE))), "\n", "soit", round(100 * nrow(Cultivation_top_25 |> filter(is.na(VAR_TYPE))) / nrow(Cultivation_top_25), 1), "%\n")
```
```{r}
Cultivation_top_25 |>
  distinct(VDS_ID, PLOT_CODE, .keep_all = TRUE) |>
  group_by(VAR_TYPE) |>
  summarise(n = n(), .groups = "drop") |>
  arrange(desc(n))
```


### Regarder HYV par culture

On regarde quels types de variété sont présents par culture. 

```{r}
Cultivation_top_25 |>
  distinct(VDS_ID, PLOT_CODE, .keep_all = TRUE) |>
  filter(CROP %in% c("PADDY", "WHEAT", "MAIZE", "SOYBEAN", "SORGHUM", "COTTON", "POTATO", "PEAS")) |>
  filter(!is.na(VAR_TYPE)) |>
  group_by(CROP, VAR_TYPE) |>
  summarise(nb_plots = n(), .groups = "drop") |>
  ggplot(aes(x = CROP, y = nb_plots, fill = VAR_TYPE)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  geom_text(
    aes(label = nb_plots),
    position = position_dodge(width = 0.7),
    hjust = -0.2,
    size = 3
  ) +
  coord_flip() +
  labs(
    title = "Nombre de champs selon le type de variété par culture",
    x = "",
    y = "Nombre de champs",
    fill = "Type de variété"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10)
  )
```

### Paddy- h/acre selon HYV

Paddy est la seule culture avec suffisament de résultats pour regarder la moyenne de h/acre selon le type de variété. 

Je calcule la moyenne de h/acre pour ces cultures selon le type de variété, en conservant les groupes (VAR_TYPE) avec plus de 10 champs distincts. 

```{r}
# Filtre les groupes (CROP, VAR_TYPE) qui ont plus de 10 champs distincts
valid_groups <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(!is.na(VAR_TYPE)) |>
  distinct(VDS_ID, PLOT_CODE, .keep_all = TRUE) |>
  group_by(CROP, VAR_TYPE) |>
  filter(n() > 10) |>
  ungroup() |>
  distinct(CROP, VAR_TYPE)

# Moyenne de h/acre entre champs irrigués / non irrigués par culture
hr_per_acre_HYV <- Cultivation_top_25 |>
  filter(!MULTI_CROPING) |>
  filter(!is.na(VAR_TYPE)) |>
  filter(LAB_TYPE %in% c("HF", "FF", "EF", "HM", "FM", "EM", "FC", "HC", "EC")) |>
  semi_join(valid_groups, by = c("CROP", "VAR_TYPE")) |>
  group_by(CROP, VAR_TYPE) |>
  summarise(MEAN_HR_PER_ACRE = mean(HR_PER_ACRE, na.rm = TRUE)) |>
  arrange(desc(MEAN_HR_PER_ACRE))
```

```{r}
hr_per_acre_HYV |>
  filter(CROP == "PADDY") |>
  ggplot(aes(x = CROP, y = MEAN_HR_PER_ACRE, fill = VAR_TYPE)) +
  geom_col(position = position_dodge(width = 0.7), width = 0.6) +
  geom_text(
    aes(label = round(MEAN_HR_PER_ACRE, 1)),
    position = position_dodge(width = 0.7),
    vjust = -0.3,
    size = 3.5
  ) +
  labs(
    title = "Paddy- Moyenne de h/acre selon le type de variété",
    x = "",
    y = "Heures par acre",
    fill = "Type de variété"
  ) +
  scale_y_continuous(labels = comma) +
  theme_minimal()
```

## Genre
### Travail par mois

On compare le temps de travail des hommes et des femmes réalisé par mois.  

```{r}
hr_per_person <- Cultivation_cult_distinctes |>
  group_by(GENDER, MONTH, .keep_all = TRUE) |>
  summarise(TOTAL_HR = sum(WORK_HR, na.rm = TRUE),
            NB_PERSONS = n(),
            .groups = "drop") |>
  mutate(MONTH = factor(MONTH, levels = month_levels, ordered = TRUE))
```

#### Heures réalisées par mois

```{r}
hr_per_person |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = MONTH, y = TOTAL_HR, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  labs(
    title = "Total d'heures réalisées par mois selon le genre",
    x = "",
    y = "",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 9)
  )
```

#### Nombre de travailleurs par mois

```{r}
hr_per_person |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = MONTH, y = NB_PERSONS, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  geom_text(
    aes(label = NB_PERSONS),
    position = position_dodge(width = 0.7),
    vjust = -0.3,
    size = 3
  ) +
  labs(
    title = "Nombre de travailleurs par mois selon le genre",
    x = "",
    y = "",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 9)
  )
```

#### Heures par personne (h/p) par mois selon le genre

Je calcule les heures de travail per personne (h/p) à partir de la base Cultivation_cult_distinctes (qui prends en compte toutes les cultures).
Je considère les groupes (GENDER / MONTH) 

```{r}
hr_per_person <- hr_per_person |>
  group_by(GENDER, MONTH, .keep_all = TRUE) |>
  mutate(HR_PER_PERSON = TOTAL_HR/NB_PERSONS) 
```

```{r}
hr_per_person |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = MONTH, y = HR_PER_PERSON, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  labs(
    title = "Heures réalisées par personne par mois selon le genre",
    x = "",
    y = "",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 9)
  )
```
### Travail par opération

On compare le temps de travail des hommes et des femmes réalisé par opération.  

```{r}
hr_per_person <- Cultivation_cult_distinctes |>
  group_by(GENDER, OPERATION, .keep_all = TRUE) |>
  summarise(TOTAL_HR = sum(WORK_HR, na.rm = TRUE),
            NB_PERSONS = n(),
            .groups = "drop")
```

#### Heures réalisées par opération

```{r}
hr_per_person |>
  filter(OPERATION %in% c("HARVESTING & THRESHING", "LAND PREPARATION", "HAND WEEDING", "TRANSPLANTING", "IRRIGATION", "INTERCULTURE", "SEED SOWING", "CHEMICAL FERTILIZER APPL.", "TRANSPORT", "SUPERVISION", "PLANT PROTECTION MEASURES")) |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = OPERATION, y = TOTAL_HR, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  labs(
    title = "Total d'heures réalisées par opération selon le genre",
    x = "",
    y = "",
    fill = ""
  ) +
  scale_y_continuous(labels = scales::comma) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    legend.text = element_text(size = 8)
  )
```

#### Nombre de travailleurs par opération

```{r}
hr_per_person |>
  filter(OPERATION %in% c("HARVESTING & THRESHING", "LAND PREPARATION", "HAND WEEDING", "TRANSPLANTING", "IRRIGATION", "INTERCULTURE", "SEED SOWING", "CHEMICAL FERTILIZER APPL.", "TRANSPORT", "SUPERVISION", "PLANT PROTECTION MEASURES")) |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = OPERATION, y = NB_PERSONS, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
    geom_text(
    aes(label = NB_PERSONS),
    position = position_dodge(width = 0.7),
    vjust = -0.3,
    size = 3
  ) +
  labs(
    title = "Nombre de travailleurs par opération selon le genre",
    x = "",
    y = "",
    fill = ""
  ) +
  scale_y_continuous(labels = scales::comma) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    legend.text = element_text(size = 8)
  )
```

#### Heures par personne (h/p) par opération selon le genre

Je considère les groupes (GENDER / OPERATION) 

```{r}
hr_per_person <- hr_per_person |>
  group_by(GENDER, OPERATION, .keep_all = TRUE) |>
  mutate(HR_PER_PERSON = TOTAL_HR/NB_PERSONS) 
```

```{r}
hr_per_person |>
  filter(OPERATION %in% c("HARVESTING & THRESHING", "LAND PREPARATION", "HAND WEEDING", "TRANSPLANTING", "IRRIGATION", "INTERCULTURE", "SEED SOWING", "CHEMICAL FERTILIZER APPL.", "TRANSPORT", "SUPERVISION", "PLANT PROTECTION MEASURES")) |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = OPERATION, y = HR_PER_PERSON, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  labs(
    title = "Heures réalisées par personne par opération selon le genre",
    x = "",
    y = "",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    legend.text = element_text(size = 8)
  )
```

### Travail employé

On regarde le type de main d'oeuvre selon le genre : employé, famille et échange. 
Je considère le nombre de travailleurs total pour chaque catégorie à partir de la variable créée EMPLOYMENT. 

```{r}
hired_work <- Cultivation_cult_distinctes |>
  group_by(GENDER, EMPLOYMENT, .keep_all = TRUE) |>
  summarise(TOTAL_HR = sum(WORK_HR, na.rm = TRUE),
            NB_PERSONS = n(),
            .groups = "drop")
```

```{r}
hired_work |>
  filter(GENDER == "Female" | GENDER == "Male") |>
  ggplot(aes(x = EMPLOYMENT, y = NB_PERSONS, fill = GENDER)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  labs(
    title = "Type de main d'oeuvre selon le genre",
    x = "",
    y = "Nombre de travailleurs",
    fill = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    legend.text = element_text(size = 8)
  )
```

